var rl = Object.defineProperty;
var il = (e, t, a) => t in e ? rl(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var fe = (e, t, a) => (il(e, typeof t != "symbol" ? t + "" : t, a), a);
import { computed as u, Comment as ul, reactive as Ie, inject as Fe, onMounted as ge, onBeforeUnmount as rt, ref as W, toRef as o, onActivated as Ot, watch as re, nextTick as Oe, defineComponent as x, provide as Me, openBlock as d, createElementBlock as m, unref as s, normalizeClass as F, renderSlot as h, createBlock as O, resolveDynamicComponent as J, withCtx as N, createElementVNode as H, withDirectives as Je, createTextVNode as Y, toDisplayString as q, createVNode as me, Fragment as le, createCommentVNode as j, normalizeStyle as ze, useSlots as He, mergeProps as U, getCurrentInstance as dl, renderList as ie, resolveComponent as zt, normalizeProps as ye, h as Q, Transition as cl, onUnmounted as fl, isReactive as vl, useAttrs as ra, withModifiers as it, isRef as Ye, vModelCheckbox as ml, vModelRadio as bl, vModelSelect as gl, guardReactiveProps as Te, Teleport as pl, createSlots as ia } from "vue";
import { Collapse as hl, Popover as St, Tooltip as ht, Alert as yl, Carousel as Bl, Dropdown as $l, Modal as kl, Offcanvas as Sl } from "bootstrap";
const Cl = (e) => u(
  () => e.value === "center" ? "justify-content-center" : e.value === "end" ? "justify-content-end" : "justify-content-start"
), ut = (e, t) => Object.keys(e).filter((a) => !t.includes(a)).reduce((a, l) => ({ ...a, [l]: e[l] }), {}), Ee = () => ({ enumerable: !0, configurable: !1, writable: !1 }), lt = (e) => Array.isArray(e) ? e.map((t) => lt(t)) : e instanceof Date ? new Date(e.getTime()) : e && typeof e == "object" ? Object.getOwnPropertyNames(e).reduce((t, a) => {
  var l;
  return Object.defineProperty(t, a, (l = Object.getOwnPropertyDescriptor(e, a)) != null ? l : {}), t[a] = lt(e[a]), t;
}, Object.create(Object.getPrototypeOf(e))) : e, Ct = (e) => new Promise((t) => t(lt(e)));
class dt {
  constructor(t, a = {}) {
    fe(this, "cancelable", !0);
    fe(this, "componentId", null);
    fe(this, "defaultPrevented", !1);
    fe(this, "nativeEvent", null);
    fe(this, "preventDefault");
    fe(this, "relatedTarget", null);
    fe(this, "target", null);
    fe(this, "eventType", "");
    fe(this, "vueTarget", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, dt.Defaults, this.constructor.Defaults, a, { eventType: t }), Object.defineProperties(this, {
      type: Ee(),
      cancelable: Ee(),
      nativeEvent: Ee(),
      target: Ee(),
      relatedTarget: Ee(),
      vueTarget: Ee(),
      componentId: Ee()
    });
    let l = !1;
    this.preventDefault = function() {
      this.cancelable && (l = !0);
    }, Object.defineProperty(this, "defaultPrevented", {
      enumerable: !0,
      get() {
        return l;
      }
    });
  }
  static get Defaults() {
    return {
      eventType: "",
      cancelable: !0,
      nativeEvent: null,
      target: null,
      relatedTarget: null,
      vueTarget: null,
      componentId: null
    };
  }
}
const wl = (e) => e !== null && typeof e == "object", ua = (e) => /^[0-9]*\.?[0-9]+$/.test(String(e)), da = (e) => Object.prototype.toString.call(e) === "[object Object]", ca = /_/g, fa = /([a-z])([A-Z])/g, Tl = /(\s|^)(\w)/g, Vl = /(\s|^)(\w)/, Qe = /\s+/, _l = /^#/, Al = /^#[A-Za-z]+[\w\-:.]*$/, wt = (e, t = 2) => typeof e == "string" ? e : e == null ? "" : Array.isArray(e) || da(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), jt = (e) => e.replace(ca, " ").replace(fa, (t, a, l) => `${a} ${l}`).replace(Vl, (t, a, l) => a + l.toUpperCase()), Mt = (e) => e.replace(ca, " ").replace(fa, (t, a, l) => `${a} ${l}`).replace(Tl, (t, a, l) => a + l.toUpperCase()), xl = (e) => {
  const t = e.trim();
  return t.charAt(0).toUpperCase() + t.slice(1);
}, yt = (e) => `\\${e}`, Il = (e) => {
  e = wt(e);
  const { length: t } = e, a = e.charCodeAt(0);
  return e.split("").reduce((l, n, i) => {
    const c = e.charCodeAt(i);
    return c === 0 ? `${l}\uFFFD` : c === 127 || c >= 1 && c <= 31 || i === 0 && c >= 48 && c <= 57 || i === 1 && c >= 48 && c <= 57 && a === 45 ? l + yt(`${c.toString(16)} `) : i === 0 && c === 45 && t === 1 ? l + yt(n) : c >= 128 || c === 45 || c === 95 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 ? l + n : l + yt(n);
  }, "");
}, va = typeof window < "u", ma = typeof document < "u", Fl = typeof navigator < "u", Ol = va && ma && Fl, ba = ma ? document : {}, Pe = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), zl = (e) => Pe(e) ? e.getBoundingClientRect() : null, Pl = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((a) => a === t) ? t : null;
}, Nl = (e) => Pe(e) && e === Pl(), Ll = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (a) {
    console.error(a);
  }
  return Nl(e);
}, El = (e, t) => t && Pe(e) && e.getAttribute(t) || null, Hl = (e) => {
  if (El(e, "display") === "none")
    return !1;
  const t = zl(e);
  return !!(t && t.height > 0 && t.width > 0);
}, Gt = (e, t) => !e || e(t).filter((a) => a.type !== ul).length < 1, Dl = (e, t) => (Pe(t) ? t : ba).querySelector(e) || null, ql = (e, t) => Array.from([(Pe(t) ? t : ba).querySelectorAll(e)]), ga = (e, t) => t && Pe(e) ? e.getAttribute(t) : null, Rl = (e, t, a) => {
  t && Pe(e) && e.setAttribute(t, a);
}, jl = (e, t) => {
  t && Pe(e) && e.removeAttribute(t);
}, Ml = (e, t) => wt(e).toLowerCase() === wt(t).toLowerCase(), Ze = va ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || ((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), ct = (e, t, a) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((l, n) => (l[e ? `${e}${n.charAt(0).toUpperCase() + n.slice(1)}` : n] = a, l), /* @__PURE__ */ Object.create(null)), pa = (e, t, a, l = a) => Object.keys(t).reduce((n, i) => (e[i] && n.push(
  [l, i.replace(a, ""), e[i]].filter((c) => c && typeof c != "boolean").join("-").toLowerCase()
), n), []), xe = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, ft = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : void 0, Bt = (e) => !!e && typeof e == "object" && e.constructor === Object, Tt = (e, t, a = !0) => {
  const l = e instanceof Date && typeof e.getMonth == "function" ? new Date(e.getTime()) : Object.assign({}, e);
  return Bt(e) && Bt(t) && Object.keys(t).forEach((n) => {
    Bt(t[n]) ? n in e ? l[n] = Tt(e[n], t[n], a) : Object.assign(l, { [n]: t[n] }) : Array.isArray(t[n]) && Array.isArray(e[n]) ? Object.assign(l, {
      [n]: a ? e[n].concat(
        t[n].filter((i) => !e[n].includes(i))
      ) : t[n]
    }) : Object.assign(l, { [n]: t[n] });
  }), l;
}, Se = (e, t = {}, a = {}) => {
  const l = [e];
  let n;
  for (let i = 0; i < l.length && !n; i++) {
    const c = l[i];
    n = a[c];
  }
  return n && typeof n == "function" ? n(t) : n;
}, je = (e, t = NaN) => Number.isInteger(e) ? e : t, Ue = (e, t = NaN) => {
  const a = Number.parseInt(e, 10);
  return Number.isNaN(a) ? t : a;
}, Pt = (e, t = NaN) => {
  const a = Number.parseFloat(e.toString());
  return Number.isNaN(a) ? t : a;
}, Ut = (e, t) => t + (e ? xl(e) : ""), Nt = (e, t) => (Array.isArray(t) ? t.slice() : Object.keys(t)).reduce(
  (a, l) => (a[l] = e[l], a),
  {}
), Gl = (e) => typeof e == "boolean" ? e : e === "" ? !0 : e === "true", Xe = (e) => !!(e.href || e.to);
function r(e) {
  return u(() => e.value === void 0 ? void 0 : Gl(e.value));
}
const ha = Symbol(), ya = {
  items: Ie([]),
  reset() {
    this.items = Ie([]);
  }
}, Ul = (e) => {
  e.provide(ha, ya);
}, Wl = () => {
  const e = Fe(ha);
  return e || ya;
}, ve = (e, t, a) => {
  ge(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.addEventListener(t, a);
  }), rt(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.removeEventListener(t, a);
  });
}, Ba = (e) => u(() => ({
  "form-check": !e.plain && !e.button,
  "form-check-inline": e.inline,
  "form-switch": e.switch,
  [`form-control-${e.size}`]: e.size && e.size !== "md"
})), $a = (e) => u(() => ({
  "form-check-input": !e.plain && !e.button,
  "is-valid": e.state === !0,
  "is-invalid": e.state === !1,
  "btn-check": e.button
})), ka = (e) => u(() => ({
  "form-check-label": !e.plain && !e.button,
  btn: e.button,
  [`btn-${e.buttonVariant}`]: e.button,
  [`btn-${e.size}`]: e.button && e.size && e.size !== "md"
})), Sa = (e) => u(() => {
  var t;
  return {
    "aria-invalid": ft(e.ariaInvalid, e.state),
    "aria-required": ((t = e.required) == null ? void 0 : t.toString()) === "true" ? "true" : null
  };
}), Ca = (e) => u(() => ({
  "was-validated": e.validated,
  "btn-group": e.buttons && !e.stacked,
  "btn-group-vertical": e.stacked,
  [`btn-group-${e.size}`]: e.size
})), nt = (e, t, a) => e.reduce(
  (l, n) => n.type.toString() === "Symbol(Fragment)" ? l.concat(n.children) : l.concat([n]),
  []
).filter((l) => (l.type.__name || l.type.name) === t).map((l) => {
  const n = (l.children.default ? l.children.default() : []).find(
    (i) => i.type.toString() === "Symbol(Text)"
  );
  return {
    props: {
      disabled: a,
      ...l.props
    },
    text: n ? n.children : ""
  };
}), wa = (e, t) => typeof e == "string" ? {
  props: {
    value: e,
    disabled: t.disabled
  },
  text: e
} : {
  props: {
    value: e[t.valueField],
    disabled: t.disabled || e[t.disabledField],
    ...e.props
  },
  text: e[t.textField],
  html: e[t.htmlField]
}, Ta = (e, t, a, l, n) => ({
  ...e,
  props: {
    "button-variant": a.buttonVariant,
    form: a.form,
    name: l.value,
    id: `${n.value}_option_${t}`,
    button: a.buttons,
    state: a.state,
    plain: a.plain,
    size: a.size,
    inline: !a.stacked,
    required: a.required,
    ...e.props
  }
}), he = (e, t) => u(() => (e == null ? void 0 : e.value) || xe(t)), Va = {
  ariaInvalid: {
    type: [Boolean, String],
    default: void 0
  },
  autocomplete: { type: String, required: !1 },
  autofocus: { type: Boolean, default: !1 },
  disabled: { type: Boolean, default: !1 },
  form: { type: String, required: !1 },
  formatter: { type: Function, required: !1 },
  id: { type: String, required: !1 },
  lazy: { type: Boolean, default: !1 },
  lazyFormatter: { type: Boolean, default: !1 },
  list: { type: String, required: !1 },
  modelValue: { type: [String, Number], default: "" },
  name: { type: String, required: !1 },
  number: { type: Boolean, default: !1 },
  placeholder: { type: String, required: !1 },
  plaintext: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  required: { type: Boolean, default: !1 },
  size: { type: String, required: !1 },
  state: { type: Boolean, default: null },
  trim: { type: Boolean, default: !1 }
}, _a = (e, t) => {
  const a = W();
  let l = null, n = !0;
  const i = he(o(e, "id"), "input"), c = (y, S, $ = !1) => (y = String(y), typeof e.formatter == "function" && (!e.lazyFormatter || $) ? (n = !1, e.formatter(y, S)) : y), f = (y) => e.trim ? y.trim() : e.number ? Number.parseFloat(y) : y, v = () => {
    Oe(() => {
      var y;
      e.autofocus && ((y = a.value) == null || y.focus());
    });
  };
  ge(v), ge(() => {
    a.value && (a.value.value = e.modelValue);
  }), Ot(v);
  const b = u(
    () => {
      var y;
      return ft(e.ariaInvalid, (y = e.state) != null ? y : void 0);
    }
  ), g = (y) => {
    const { value: S } = y.target, $ = c(S, y);
    if ($ === !1 || y.defaultPrevented) {
      y.preventDefault();
      return;
    }
    if (e.lazy)
      return;
    const z = f($);
    e.modelValue !== z && (l = S, t("update:modelValue", z)), t("input", $);
  }, B = (y) => {
    const { value: S } = y.target, $ = c(S, y);
    if ($ === !1 || y.defaultPrevented) {
      y.preventDefault();
      return;
    }
    if (!e.lazy)
      return;
    l = S, t("update:modelValue", $);
    const z = f($);
    e.modelValue !== z && t("change", $);
  }, p = (y) => {
    if (t("blur", y), !e.lazy && !e.lazyFormatter)
      return;
    const { value: S } = y.target, $ = c(S, y, !0);
    l = S, t("update:modelValue", $);
  }, k = () => {
    var y;
    e.disabled || (y = a.value) == null || y.focus();
  }, C = () => {
    var y;
    e.disabled || (y = a.value) == null || y.blur();
  };
  return re(
    () => e.modelValue,
    (y) => {
      !a.value || (a.value.value = l && n ? l : y, l = null, n = !0);
    }
  ), {
    input: a,
    computedId: i,
    computedAriaInvalid: b,
    onInput: g,
    onChange: B,
    onBlur: p,
    focus: k,
    blur: C
  };
}, Re = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const a = t.split(".");
  return Re(e[a[0]], a.splice(1).join("."));
}, $t = (e, t = null, a, l) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const n = Re(e, l.valueField), i = Re(e, l.textField), c = Re(e, l.htmlField), f = Re(e, l.disabledField), v = e[l.optionsField] || null;
    return v !== null ? {
      label: String(Re(e, l.labelField) || i),
      options: Lt(v, a, l)
    } : {
      value: typeof n > "u" ? t || i : n,
      text: String(typeof i > "u" ? t : i),
      html: c,
      disabled: Boolean(f)
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, Lt = (e, t, a) => Array.isArray(e) ? e.map((l) => $t(l, null, t, a)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((l) => {
  const n = e[l];
  switch (typeof n) {
    case "object":
      return $t(n.text, String(n.value), t, a);
    default:
      return $t(n, String(l), t, a);
  }
})) : [], Xl = ["id"], Aa = Symbol(), Kl = /* @__PURE__ */ x({
  __name: "BAccordion",
  props: {
    flush: { default: !1 },
    free: { default: !1 },
    id: null
  },
  setup(e) {
    const t = e, a = he(o(t, "id"), "accordion"), l = r(o(t, "flush")), n = r(o(t, "free")), i = u(() => ({
      "accordion-flush": l.value
    }));
    return n.value || Me(Aa, a.value.toString()), (c, f) => (d(), m("div", {
      id: s(a),
      class: F(["accordion", s(i)])
    }, [
      h(c.$slots, "default")
    ], 10, Xl));
  }
}), xa = /* @__PURE__ */ x({
  __name: "BCollapse",
  props: {
    accordion: null,
    id: { default: xe() },
    modelValue: { default: !1 },
    tag: { default: "div" },
    toggle: { default: !1 },
    visible: { default: !1 },
    isNav: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "modelValue")), n = r(o(a, "toggle")), i = r(o(a, "visible")), c = r(o(a, "isNav")), f = W(), v = W(), b = u(() => ({
      show: l.value,
      "navbar-collapse": c.value
    })), g = () => t("update:modelValue", !1);
    return ve(f, "show.bs.collapse", () => {
      t("show"), t("update:modelValue", !0);
    }), ve(f, "hide.bs.collapse", () => {
      t("hide"), t("update:modelValue", !1);
    }), ve(f, "shown.bs.collapse", () => t("shown")), ve(f, "hidden.bs.collapse", () => t("hidden")), ge(() => {
      var B;
      v.value = new hl(f.value, {
        parent: a.accordion ? `#${a.accordion}` : void 0,
        toggle: n.value
      }), (i.value || l.value) && (t("update:modelValue", !0), (B = v.value) == null || B.show());
    }), re(
      () => l.value,
      (B) => {
        var p, k;
        B ? (p = v.value) == null || p.show() : (k = v.value) == null || k.hide();
      }
    ), re(
      () => i.value,
      (B) => {
        var p, k;
        B ? (t("update:modelValue", !!B), (p = v.value) == null || p.show()) : (t("update:modelValue", !!B), (k = v.value) == null || k.hide());
      }
    ), (B, p) => (d(), O(J(e.tag), {
      id: e.id,
      ref_key: "element",
      ref: f,
      class: F(["collapse", s(b)]),
      "data-bs-parent": e.accordion || null,
      "is-nav": s(c)
    }, {
      default: N(() => [
        h(B.$slots, "default", {
          visible: s(l),
          close: g
        })
      ]),
      _: 3
    }, 8, ["id", "class", "data-bs-parent", "is-nav"]));
  }
}), Jl = {
  mounted(e, t) {
    let a = t.value;
    Object.keys(t.modifiers).length > 0 && ([a] = Object.keys(t.modifiers)), e.setAttribute("data-bs-toggle", "modal"), e.setAttribute("data-bs-target", `#${a}`);
  }
}, Yl = {
  mounted(e, t) {
    let a = "right";
    const l = [];
    t.modifiers.left ? a = "left" : t.modifiers.right ? a = "right" : t.modifiers.bottom ? a = "bottom" : t.modifiers.top && (a = "top"), t.modifiers.manual ? l.push("manual") : (t.modifiers.click && l.push("click"), t.modifiers.hover && l.push("hover"), t.modifiers.focus && l.push("focus")), e.setAttribute("data-bs-toggle", "popover"), new St(e, {
      trigger: l.length === 0 ? "click" : l.join(" "),
      placement: a,
      content: t.value
    });
  },
  unmounted(e) {
    const t = St.getInstance(e);
    t == null || t.dispose();
  }
}, Zl = (e) => {
  if (e.classList.contains("offcanvas"))
    return "offcanvas";
  if (e.classList.contains("collapse"))
    return "collapse";
  throw Error("Couldn't resolve toggle type");
}, Ql = (e, t) => {
  const { modifiers: a, arg: l, value: n } = e, i = Object.keys(a || {}), c = typeof n == "string" ? n.split(Qe) : n;
  if (Ml(t.tagName, "a")) {
    const f = ga(t, "href") || "";
    Al.test(f) && i.push(f.replace(_l, ""));
  }
  return Array.prototype.concat.apply([], [l, c]).forEach((f) => typeof f == "string" && i.push(f)), i.filter((f, v, b) => f && b.indexOf(f) === v);
}, Et = {
  mounted(e, t) {
    const a = Ql(t, e), l = [];
    let n = "data-bs-target";
    e.tagName === "a" && (n = "href");
    for (let i = 0; i < a.length; i++) {
      const c = a[i], f = document.getElementById(c);
      f && (e.setAttribute("data-bs-toggle", Zl(f)), l.push(`#${c}`));
    }
    l.length > 0 && e.setAttribute(n, l.join(","));
  }
}, en = (e, t) => {
  if (t != null && t.trigger)
    return t.trigger;
  if (e.manual)
    return "manual";
  const a = [];
  return e.click && a.push("click"), e.hover && a.push("hover"), e.focus && a.push("focus"), a.length > 0 ? a.join(" ") : "hover focus";
}, tn = (e, t) => t != null && t.placement ? t.placement : e.left ? "left" : e.right ? "right" : e.bottom ? "bottom" : "top", an = (e) => e != null && e.delay ? e.delay : 0, Wt = (e) => typeof e == "object" ? e == null ? void 0 : e.title : e, ln = {
  beforeMount(e, t) {
    e.setAttribute("data-bs-toggle", "tooltip"), e.getAttribute("title") || e.setAttribute("title", Wt(t.value).toString());
    const a = /<("[^"]*"|'[^']*'|[^'">])*>/.test(e.title), l = en(t.modifiers, t.value), n = tn(t.modifiers, t.value), i = an(t.value), c = e.getAttribute("title");
    new ht(e, {
      trigger: l,
      placement: n,
      delay: i,
      html: a
    }), c && e.setAttribute("data-bs-original-title", c);
  },
  updated(e, t) {
    e.getAttribute("title") || e.setAttribute("title", Wt(t.value).toString());
    const a = e.getAttribute("title"), l = e.getAttribute("data-bs-original-title"), n = ht.getInstance(e);
    e.removeAttribute("title"), a && a !== l && (n == null || n.setContent({ ".tooltip-inner": a }), e.setAttribute("data-bs-original-title", a));
  },
  unmounted(e) {
    const t = ht.getInstance(e);
    t == null || t.dispose();
  }
}, et = /* @__PURE__ */ new Map(), Ia = (e) => {
  if (et.has(e)) {
    const t = et.get(e);
    t && t.stop && t.stop(), et.delete(e);
  }
}, Xt = (e, t) => {
  const a = {
    margin: "0px",
    once: !1,
    callback: t.value
  };
  Object.keys(t.modifiers).forEach((n) => {
    Number.isInteger(n) ? a.margin = `${n}px` : n.toLowerCase() === "once" && (a.once = !0);
  }), Ia(e);
  const l = new on(
    e,
    a.margin,
    a.once,
    a.callback,
    t.instance
  );
  et.set(e, l);
}, nn = {
  beforeMount(e, t) {
    Xt(e, t);
  },
  updated(e, t) {
    Xt(e, t);
  },
  unmounted(e) {
    Ia(e);
  }
};
class on {
  constructor(t, a, l, n, i) {
    fe(this, "element");
    fe(this, "margin");
    fe(this, "once");
    fe(this, "callback");
    fe(this, "instance");
    fe(this, "observer");
    fe(this, "doneOnce");
    fe(this, "visible");
    this.element = t, this.margin = a, this.once = l, this.callback = n, this.instance = i, this.createObserver();
  }
  createObserver() {
    if (this.observer && this.stop(), !(this.doneOnce || typeof this.callback != "function")) {
      try {
        this.observer = new IntersectionObserver(this.handler.bind(this), {
          root: null,
          rootMargin: this.margin,
          threshold: 0
        });
      } catch {
        console.error("Intersection Observer not supported"), this.doneOnce = !0, this.observer = void 0, this.callback(null);
        return;
      }
      this.instance.$nextTick(() => {
        this.observer && this.observer.observe(this.element);
      });
    }
  }
  handler(t) {
    const [a] = t, l = Boolean(a.isIntersecting || a.intersectionRatio > 0);
    l !== this.visible && (this.visible = l, this.callback(l), this.once && this.visible && (this.doneOnce = !0, this.stop()));
  }
  stop() {
    this.observer && this.observer.disconnect(), this.observer = null;
  }
}
const sn = {
  mounted(e, t) {
    t.value !== !1 && e.focus();
  }
}, rn = {
  BModal: Jl,
  BPopover: Yl,
  BToggle: Et,
  BTooltip: ln,
  BVisible: nn,
  focus: sn
}, un = { class: "accordion-item" }, dn = ["id"], cn = ["aria-expanded", "aria-controls"], fn = { class: "accordion-body" }, vn = /* @__PURE__ */ x({
  __name: "BAccordionItem",
  props: {
    id: null,
    title: null,
    visible: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "visible")), l = he(o(t, "id"), "accordion_item"), n = Fe(Aa, "");
    return (i, c) => (d(), m("div", un, [
      H("h2", {
        id: `${s(l)}heading`,
        class: "accordion-header"
      }, [
        Je((d(), m("button", {
          class: F(["accordion-button", { collapsed: !s(a) }]),
          type: "button",
          "aria-expanded": s(a) ? "true" : "false",
          "aria-controls": s(l)
        }, [
          h(i.$slots, "title", {}, () => [
            Y(q(e.title), 1)
          ])
        ], 10, cn)), [
          [s(Et), void 0, s(l)]
        ])
      ], 8, dn),
      me(xa, {
        id: s(l),
        class: "accordion-collapse",
        visible: s(a),
        accordion: s(n),
        "aria-labelledby": `heading${s(l)}`
      }, {
        default: N(() => [
          H("div", fn, [
            h(i.$slots, "default")
          ])
        ]),
        _: 3
      }, 8, ["id", "visible", "accordion", "aria-labelledby"])
    ]));
  }
}), mn = ["type", "disabled", "aria-label"], Ge = /* @__PURE__ */ x({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { default: !1 },
    white: { default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "disabled")), n = r(o(a, "white")), i = u(() => ({
      "btn-close-white": n.value
    }));
    return (c, f) => (d(), m("button", {
      type: e.type,
      class: F(["btn-close", s(i)]),
      disabled: s(l),
      "aria-label": e.ariaLabel,
      onClick: f[0] || (f[0] = (v) => t("click", v))
    }, null, 10, mn));
  }
}), bn = /* @__PURE__ */ x({
  __name: "BAlert",
  props: {
    dismissLabel: { default: "Close" },
    dismissible: { default: !1 },
    fade: { default: !1 },
    modelValue: { type: [Boolean, Number], default: !1 },
    show: { default: !1 },
    variant: { default: "info" }
  },
  emits: ["closed", "close-count-down", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "dismissible"));
    r(o(a, "fade"));
    const n = r(o(a, "show")), i = W(null), c = W(), f = u(() => ({
      [`alert-${a.variant}`]: !!a.variant,
      show: !!a.modelValue,
      "alert-dismissible": l.value,
      fade: !!a.modelValue
    }));
    let v;
    const b = (S) => {
      if (typeof S == "boolean")
        return 0;
      const $ = je(S, 0);
      return $ > 0 ? $ : 0;
    }, g = () => {
      v !== void 0 && (clearTimeout(v), v = void 0);
    }, B = W(b(a.modelValue)), p = u(() => !!a.modelValue || n.value);
    rt(() => {
      var S;
      g(), (S = c.value) == null || S.dispose(), c.value = void 0;
    });
    const k = u(() => a.modelValue === !0 ? !0 : a.modelValue === !1 || je(a.modelValue, 0) < 1 ? !1 : !!a.modelValue), C = () => {
      B.value = b(a.modelValue), (k.value || n.value) && !c.value && (c.value = new yl(i.value));
    }, y = () => {
      typeof a.modelValue == "boolean" ? t("update:modelValue", !1) : t("update:modelValue", 0), t("closed");
    };
    return re(() => a.modelValue, C), re(() => n.value, C), re(B, (S) => {
      g(), typeof a.modelValue != "boolean" && (t("close-count-down", S), S === 0 && a.modelValue > 0 && t("closed"), a.modelValue !== S && t("update:modelValue", S), S > 0 && (v = setTimeout(() => {
        B.value--;
      }, 1e3)));
    }), (S, $) => s(p) ? (d(), m("div", {
      key: 0,
      ref_key: "element",
      ref: i,
      class: F(["alert", s(f)]),
      role: "alert"
    }, [
      h(S.$slots, "default"),
      s(l) ? (d(), m(le, { key: 0 }, [
        S.$slots.close ? (d(), m("button", {
          key: 0,
          type: "button",
          "data-bs-dismiss": "alert",
          onClick: y
        }, [
          h(S.$slots, "close")
        ])) : (d(), O(Ge, {
          key: 1,
          "aria-label": e.dismissLabel,
          "data-bs-dismiss": "alert",
          onClick: y
        }, null, 8, ["aria-label"]))
      ], 64)) : j("", !0)
    ], 2)) : j("", !0);
  }
}), Fa = Symbol(), gn = /* @__PURE__ */ x({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: null,
    square: { default: !1 },
    tag: { default: "div" },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "square")), l = u(() => Vt(t.size)), n = (f) => typeof f == "string" && ua(f) ? Pt(f, 0) : f || 0, i = u(
      () => Math.min(Math.max(n(t.overlap), 0), 1) / 2
    ), c = u(() => {
      const f = l.value ? `calc(${l.value} * ${i.value})` : null;
      return f ? { paddingLeft: f, paddingRight: f } : {};
    });
    return Me(Fa, {
      overlapScale: i,
      size: t.size,
      square: a.value,
      rounded: t.rounded,
      variant: t.variant
    }), (f, v) => (d(), O(J(e.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: N(() => [
        H("div", {
          class: "b-avatar-group-inner",
          style: ze(s(c))
        }, [
          h(f.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), pn = {
  key: 0,
  class: "b-avatar-custom"
}, hn = {
  key: 1,
  class: "b-avatar-img"
}, yn = ["src", "alt"], Vt = (e) => {
  const t = typeof e == "string" && ua(e) ? Pt(e, 0) : e;
  return typeof t == "number" ? `${t}px` : t || null;
}, Bn = /* @__PURE__ */ x({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    ariaLabel: null,
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { default: !1 },
    badgeOffset: null,
    badgeTop: { default: !1 },
    badgeVariant: { default: "primary" },
    button: { default: !1 },
    buttonType: { default: "button" },
    disabled: { default: !1 },
    icon: null,
    rounded: { type: [Boolean, String], default: "circle" },
    size: null,
    square: { default: !1 },
    src: null,
    text: null,
    textVariant: { default: void 0 },
    variant: { default: "secondary" }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "badgeLeft")), n = r(o(a, "badgeTop")), i = r(o(a, "button")), c = r(o(a, "disabled")), f = r(o(a, "square")), v = He(), b = ["sm", null, "lg"], g = 0.4, B = g * 0.7, p = Fe(Fa, null), k = (ee) => {
      const Z = ee;
      return Z === "light" || Z === "warning" ? "dark" : "light";
    }, C = u(() => !Gt(v.default)), y = u(() => !Gt(v.badge)), S = u(
      () => a.badge || a.badge === "" || y.value
    ), $ = u(
      () => p != null && p.size ? p.size : Vt(a.size)
    ), z = u(
      () => p != null && p.variant ? p.variant : a.variant
    ), L = u(
      () => p != null && p.rounded ? p.rounded : a.rounded
    ), V = u(() => ({
      type: i.value ? a.buttonType : void 0,
      "aria-label": a.ariaLabel || null,
      disabled: c.value || null
    })), A = u(() => ({
      [`bg-${a.badgeVariant}`]: !!a.badgeVariant
    })), I = u(() => a.badge === !0 ? "" : a.badge), M = u(() => `text-${k(a.badgeVariant)}`), _ = u(() => ({
      [`b-avatar-${a.size}`]: !!a.size && b.indexOf(Vt(a.size)) !== -1,
      [`bg-${z.value}`]: !!z.value,
      badge: !i.value && z.value && C.value,
      rounded: L.value === "" || L.value === !0,
      ["rounded-circle"]: !f.value && L.value === "circle",
      ["rounded-0"]: f.value || L.value === "0",
      ["rounded-1"]: !f.value && L.value === "sm",
      ["rounded-3"]: !f.value && L.value === "lg",
      ["rounded-top"]: !f.value && L.value === "top",
      ["rounded-bottom"]: !f.value && L.value === "bottom",
      ["rounded-start"]: !f.value && L.value === "left",
      ["rounded-end"]: !f.value && L.value === "right",
      btn: i.value,
      [`btn-${z.value}`]: i.value ? !!z.value : !1
    })), T = u(() => `text-${a.textVariant || k(z.value)}`), D = u(() => {
      const ee = a.badgeOffset || "0px";
      return {
        fontSize: (b.indexOf($.value || null) === -1 ? `calc(${$.value} * ${B})` : "") || "",
        top: n.value ? ee : "",
        bottom: n.value ? "" : ee,
        left: l.value ? ee : "",
        right: l.value ? "" : ee
      };
    }), R = u(() => {
      const ee = b.indexOf($.value || null) === -1 ? `calc(${$.value} * ${g})` : null;
      return ee ? { fontSize: ee } : {};
    }), ne = u(() => {
      var $e;
      const ee = (($e = p == null ? void 0 : p.overlapScale) == null ? void 0 : $e.value) || 0, Z = $.value && ee ? `calc(${$.value} * -${ee})` : null;
      return Z ? { marginLeft: Z, marginRight: Z } : {};
    }), ae = u(() => i.value ? "button" : "span"), K = u(() => ({
      ...ne.value,
      width: $.value,
      height: $.value
    })), de = (ee) => {
      !c.value && i.value && t("click", ee);
    }, se = (ee) => t("img-error", ee);
    return (ee, Z) => (d(), O(J(s(ae)), U({
      class: ["b-avatar", s(_)],
      style: s(K)
    }, s(V), { onClick: de }), {
      default: N(() => [
        s(C) ? (d(), m("span", pn, [
          h(ee.$slots, "default")
        ])) : e.src ? (d(), m("span", hn, [
          H("img", {
            src: e.src,
            alt: e.alt,
            onError: se
          }, null, 40, yn)
        ])) : e.text ? (d(), m("span", {
          key: 2,
          class: F(["b-avatar-text", s(T)]),
          style: ze(s(R))
        }, q(e.text), 7)) : j("", !0),
        s(S) ? (d(), m("span", {
          key: 3,
          class: F(["b-avatar-badge", s(A)]),
          style: ze(s(D))
        }, [
          s(y) ? h(ee.$slots, "badge", { key: 0 }) : (d(), m("span", {
            key: 1,
            class: F(s(M))
          }, q(s(I)), 3))
        ], 6)) : j("", !0)
      ]),
      _: 3
    }, 16, ["class", "style"]));
  }
}), De = {
  active: { type: [Boolean, String], default: !1 },
  activeClass: { type: String, default: "router-link-active" },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  exact: { type: [Boolean, String], default: !1 },
  exactActiveClass: { type: String, default: "router-link-exact-active" },
  href: { type: String },
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null }
}, $n = x({
  props: De,
  emits: ["click"],
  setup(e, { emit: t, attrs: a }) {
    const l = r(o(e, "active")), n = r(o(e, "append")), i = r(o(e, "disabled")), c = r(o(e, "exact")), f = r(o(e, "replace")), v = dl(), b = W(null), g = u(() => {
      const C = e.routerComponentName.split("-").map((S) => S.charAt(0).toUpperCase() + S.slice(1)).join("");
      return !((v == null ? void 0 : v.appContext.app.component(C)) !== void 0) || i.value || !e.to ? "a" : e.routerComponentName;
    }), B = u(() => {
      const C = "#";
      if (e.href)
        return e.href;
      if (typeof e.to == "string")
        return e.to || C;
      const y = e.to;
      if (Object.prototype.toString.call(y) === "[object Object]" && (y.path || y.query || y.hash)) {
        const S = y.path || "", $ = y.query ? `?${Object.keys(y.query).map((L) => `${L}=${y.query[L]}`).join("=")}` : "", z = !y.hash || y.hash.charAt(0) === "#" ? y.hash || "" : `#${y.hash}`;
        return `${S}${$}${z}` || C;
      }
      return C;
    }), p = u(() => ({
      to: e.to,
      href: B.value,
      target: e.target,
      rel: e.target === "_blank" && e.rel === null ? "noopener" : e.rel || null,
      tabindex: i.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": i.value ? "true" : null
    }));
    return {
      tag: g,
      routerAttr: p,
      link: b,
      clicked: (C) => {
        if (i.value) {
          C.preventDefault(), C.stopImmediatePropagation();
          return;
        }
        t("click", C);
      },
      activeBoolean: l,
      appendBoolean: n,
      disabledBoolean: i,
      replaceBoolean: f,
      exactBoolean: c
    };
  }
}), Be = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [l, n] of t)
    a[l] = n;
  return a;
};
function kn(e, t, a, l, n, i) {
  return e.tag === "router-link" ? (d(), O(J(e.tag), U({ key: 0 }, e.routerAttr, { custom: "" }), {
    default: N(({ href: c, navigate: f, isActive: v, isExactActive: b }) => [
      (d(), O(J(e.routerTag), U({
        ref: "link",
        href: c,
        class: [
          (v || e.activeBoolean) && e.activeClass,
          (b || e.exactBoolean) && e.exactActiveClass
        ]
      }, e.$attrs, { onClick: f }), {
        default: N(() => [
          h(e.$slots, "default")
        ]),
        _: 2
      }, 1040, ["href", "class", "onClick"]))
    ]),
    _: 3
  }, 16)) : (d(), O(J(e.tag), U({
    key: 1,
    ref: "link",
    class: { active: e.activeBoolean, disabled: e.disabledBoolean }
  }, e.routerAttr, { onClick: e.clicked }), {
    default: N(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class", "onClick"]));
}
const Ce = /* @__PURE__ */ Be($n, [["render", kn]]), Kt = ut(De, ["event", "routerTag"]), Sn = x({
  components: { BLink: Ce },
  props: {
    pill: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "span" },
    variant: { type: String, default: "secondary" },
    textIndicator: { type: [Boolean, String], default: !1 },
    dotIndicator: { type: [Boolean, String], default: !1 },
    ...Kt
  },
  setup(e) {
    const t = u(() => Xe(e)), a = u(() => t.value ? Ce : e.tag), l = r(o(e, "pill")), n = r(o(e, "textIndicator")), i = r(o(e, "dotIndicator"));
    return {
      classes: u(() => ({
        [`bg-${e.variant}`]: e.variant,
        active: e.active,
        disabled: e.disabled,
        "text-dark": ["warning", "info", "light"].includes(e.variant),
        "rounded-pill": l.value,
        "position-absolute top-0 start-100 translate-middle": n.value || i.value,
        "p-2 border border-light rounded-circle": i.value,
        "text-decoration-none": t.value
      })),
      props: t.value ? Nt(e, Kt) : {},
      computedTag: a
    };
  }
});
function Cn(e, t, a, l, n, i) {
  return d(), O(J(e.computedTag), U({
    class: ["badge", e.classes]
  }, e.props), {
    default: N(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class"]);
}
const wn = /* @__PURE__ */ Be(Sn, [["render", Cn]]), Jt = ut(De, ["event", "routerTag"]), Tn = x({
  components: { BLink: Ce },
  props: {
    ...Jt,
    active: { type: [Boolean, String], default: !1 },
    ariaCurrent: { type: String, default: "location" },
    disabled: { type: [Boolean, String], default: !1 },
    text: { type: String, required: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = r(o(e, "active")), l = r(o(e, "disabled")), n = u(() => ({
      active: a.value
    })), i = u(
      () => a.value ? "span" : Ce
    ), c = u(
      () => a.value ? e.ariaCurrent : void 0
    ), f = (v) => {
      if (l.value || a.value) {
        v.preventDefault(), v.stopImmediatePropagation();
        return;
      }
      l.value || t("click", v);
    };
    return {
      props: i.value !== "span" ? Nt(e, Jt) : {},
      liClasses: n,
      computedTag: i,
      computedAriaCurrent: c,
      clicked: f
    };
  }
});
function Vn(e, t, a, l, n, i) {
  return d(), m("li", {
    class: F(["breadcrumb-item", e.liClasses])
  }, [
    (d(), O(J(e.computedTag), U({ "aria-current": e.computedAriaCurrent }, e.props, { onClick: e.clicked }), {
      default: N(() => [
        h(e.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-current", "onClick"]))
  ], 2);
}
const Oa = /* @__PURE__ */ Be(Tn, [["render", Vn]]), _n = { "aria-label": "breadcrumb" }, An = { class: "breadcrumb" }, xn = /* @__PURE__ */ x({
  __name: "BBreadcrumb",
  props: {
    items: null
  },
  setup(e) {
    const t = e, a = Wl(), l = u(() => {
      const n = t.items || (a == null ? void 0 : a.items) || [];
      let i = !1;
      return n.map((f, v) => (typeof f == "string" && (f = { text: f }, v < n.length - 1 && (f.href = "#")), f.active && (i = !0), !f.active && !i && (f.active = v + 1 === n.length), f));
    });
    return (n, i) => (d(), m("nav", _n, [
      H("ol", An, [
        h(n.$slots, "prepend"),
        (d(!0), m(le, null, ie(s(l), (c, f) => (d(), O(Oa, U({ key: f }, c), {
          default: N(() => [
            Y(q(c.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        h(n.$slots, "default"),
        h(n.$slots, "append")
      ])
    ]));
  }
}), In = {
  key: 0,
  class: "visually-hidden"
}, Ht = /* @__PURE__ */ x({
  __name: "BSpinner",
  props: {
    label: null,
    role: { default: "status" },
    small: { default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "small")), l = u(() => ({
      "spinner-border": t.type === "border",
      "spinner-border-sm": t.type === "border" && a.value,
      "spinner-grow": t.type === "grow",
      "spinner-grow-sm": t.type === "grow" && a.value,
      [`text-${t.variant}`]: t.variant !== void 0
    }));
    return (n, i) => (d(), O(J(e.tag), {
      class: F(s(l)),
      role: e.label || n.$slots.label ? e.role : null,
      "aria-hidden": e.label || n.$slots.label ? null : !0
    }, {
      default: N(() => [
        e.label || n.$slots.label ? (d(), m("span", In, [
          h(n.$slots, "label", {}, () => [
            Y(q(e.label), 1)
          ])
        ])) : j("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), Fn = x({
  components: { BLink: Ce, BSpinner: Ht },
  props: {
    ...De,
    active: { type: [Boolean, String], default: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    href: { type: String, required: !1 },
    pill: { type: [Boolean, String], default: !1 },
    pressed: { type: [Boolean, String], default: !1 },
    rel: { type: String, default: void 0 },
    size: { type: String, default: "md" },
    squared: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "button" },
    target: { type: String, default: "_self" },
    type: { type: String, default: "button" },
    variant: { type: String, default: "secondary" },
    loading: { type: [Boolean, String], default: !1 },
    loadingMode: { type: String, default: "inline" }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const a = r(o(e, "active")), l = r(o(e, "disabled")), n = r(o(e, "pill")), i = r(o(e, "pressed")), c = r(o(e, "squared")), f = r(o(e, "loading")), v = u(() => i.value === !0), b = u(
      () => e.tag === "button" && e.href === void 0 && e.to === null
    ), g = u(() => Xe(e)), B = u(() => e.to !== null), p = u(
      () => e.href !== void 0 ? !1 : !b.value
    ), k = u(() => ({
      [`btn-${e.variant}`]: !!e.variant,
      [`btn-${e.size}`]: !!e.size,
      active: a.value || i.value,
      "rounded-pill": n.value,
      "rounded-0": c.value,
      disabled: l.value
    })), C = u(() => ({
      "aria-disabled": p.value ? l.value : null,
      "aria-pressed": v.value ? i.value : null,
      autocomplete: v.value ? "off" : null,
      disabled: b.value ? l.value : null,
      href: e.href,
      rel: g.value ? e.rel : null,
      role: p.value || g.value ? "button" : null,
      target: g.value ? e.target : null,
      type: b.value ? e.type : null,
      to: b.value ? null : e.to,
      append: g.value ? e.append : null,
      activeClass: B.value ? e.activeClass : null,
      event: B.value ? e.event : null,
      exact: B.value ? e.exact : null,
      exactActiveClass: B.value ? e.exactActiveClass : null,
      replace: B.value ? e.replace : null,
      routerComponentName: B.value ? e.routerComponentName : null,
      routerTag: B.value ? e.routerTag : null
    })), y = u(
      () => B.value ? Ce : e.href ? "a" : e.tag
    );
    return {
      classes: k,
      attrs: C,
      computedTag: y,
      clicked: ($) => {
        if (l.value) {
          $.preventDefault(), $.stopPropagation();
          return;
        }
        t("click", $), v.value && t("update:pressed", !i.value);
      },
      loadingBoolean: f
    };
  }
});
function On(e, t, a, l, n, i) {
  const c = zt("b-spinner");
  return d(), O(J(e.computedTag), U({
    class: ["btn", e.classes]
  }, e.attrs, { onClick: e.clicked }), {
    default: N(() => [
      e.loadingBoolean ? (d(), m("div", {
        key: 0,
        class: F(["btn-loading", { "mode-fill": e.loadingMode === "fill", "mode-inline": e.loadingMode === "inline" }])
      }, [
        h(e.$slots, "loading", {}, () => [
          me(c, {
            class: "btn-spinner",
            small: e.size !== "lg"
          }, null, 8, ["small"])
        ])
      ], 2)) : j("", !0),
      H("div", {
        class: F(["btn-content", { "btn-loading-fill": e.loadingBoolean && e.loadingMode === "fill" }])
      }, [
        h(e.$slots, "default")
      ], 2)
    ]),
    _: 3
  }, 16, ["class", "onClick"]);
}
const Ke = /* @__PURE__ */ Be(Fn, [["render", On]]), zn = /* @__PURE__ */ x({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: null,
    tag: { default: "div" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "vertical")), l = u(() => ({
      "btn-group": !a.value && t.size === void 0,
      [`btn-group-${t.size}`]: t.size !== void 0,
      "btn-group-vertical": a.value
    }));
    return (n, i) => (d(), O(J(e.tag), {
      class: F(s(l)),
      role: "group",
      "aria-label": e.ariaLabel
    }, {
      default: N(() => [
        h(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), Pn = ["role", "aria-label"], Nn = /* @__PURE__ */ x({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { default: !1 },
    role: { default: "toolbar" }
  },
  setup(e) {
    const a = r(o(e, "justify")), l = u(() => ({
      "justify-content-between": a.value
    }));
    return (n, i) => (d(), m("div", {
      class: F([s(l), "btn-toolbar"]),
      role: e.role,
      "aria-label": e.ariaLabel
    }, [
      h(n.$slots, "default")
    ], 10, Pn));
  }
}), Dt = /* @__PURE__ */ x({
  __name: "BImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: { default: "transparent" },
    block: { default: !1 },
    center: { default: !1 },
    fluid: { default: !1 },
    lazy: { default: !1 },
    fluidGrow: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    thumbnail: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "lazy")), n = r(o(a, "blank")), i = r(o(a, "block")), c = r(o(a, "center")), f = r(o(a, "fluid")), v = r(o(a, "fluidGrow")), b = r(o(a, "left")), g = r(o(a, "start")), B = r(o(a, "right")), p = r(o(a, "end")), k = r(o(a, "thumbnail")), C = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', y = (M, _, T) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      C.replace("%{w}", String(M)).replace("%{h}", String(_)).replace("%{f}", T)
    )}`, S = u(
      () => typeof a.srcset == "string" ? a.srcset.split(",").filter((M) => M).join(",") : Array.isArray(a.srcset) ? a.srcset.filter((M) => M).join(",") : void 0
    ), $ = u(
      () => typeof a.sizes == "string" ? a.sizes.split(",").filter((M) => M).join(",") : Array.isArray(a.sizes) ? a.sizes.filter((M) => M).join(",") : void 0
    ), z = u(() => {
      const M = (D) => D === void 0 ? void 0 : typeof D == "number" ? D : Number.parseInt(D, 10) || void 0, _ = M(a.width), T = M(a.height);
      if (n.value) {
        if (_ !== void 0 && T === void 0)
          return { height: _, width: _ };
        if (_ === void 0 && T !== void 0)
          return { height: T, width: T };
        if (_ === void 0 && T === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: _,
        height: T
      };
    }), L = u(
      () => y(z.value.width, z.value.height, a.blankColor)
    ), V = u(() => ({
      src: n.value ? L.value : a.src,
      alt: a.alt,
      width: z.value.width || void 0,
      height: z.value.height || void 0,
      srcset: n.value ? void 0 : S.value,
      sizes: n.value ? void 0 : $.value,
      loading: l.value ? "lazy" : "eager"
    })), A = u(
      () => b.value || g.value ? "float-start" : B.value || p.value ? "float-end" : c.value ? "mx-auto" : void 0
    ), I = u(() => ({
      "img-thumbnail": k.value,
      "img-fluid": f.value || v.value,
      "w-100": v.value,
      rounded: a.rounded === "" || a.rounded === !0,
      [`rounded-${a.rounded}`]: typeof a.rounded == "string" && a.rounded !== "",
      [`${A.value}`]: A.value !== void 0,
      "d-block": i.value || c.value
    }));
    return (M, _) => (d(), m("img", U({ class: s(I) }, s(V), {
      onLoad: _[0] || (_[0] = (T) => t("load", T))
    }), null, 16));
  }
}), ot = /* @__PURE__ */ x({
  __name: "BCardImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: null,
    bottom: { default: !1 },
    lazy: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    top: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "bottom")), n = r(o(a, "end")), i = r(o(a, "left")), c = r(o(a, "right")), f = r(o(a, "start")), v = r(o(a, "top")), b = u(
      () => v.value ? "card-img-top" : c.value || n.value ? "card-img-right" : l.value ? "card-img-bottom" : i.value || f.value ? "card-img-left" : "card-img"
    ), g = u(() => ({
      alt: a.alt,
      height: a.height,
      src: a.src,
      lazy: a.lazy,
      width: a.width,
      blank: a.blank,
      blankColor: a.blankColor,
      sizes: a.sizes,
      srcset: a.srcset
    })), B = u(() => [b.value]);
    return (p, k) => (d(), O(Dt, U({ class: s(B) }, s(g), {
      onLoad: k[0] || (k[0] = (C) => t("load", C))
    }), null, 16, ["class"]));
  }
}), Ln = ["innerHTML"], za = /* @__PURE__ */ x({
  __name: "BCardHeadFoot",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e, a = u(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0
    }));
    return (l, n) => (d(), O(J(e.tag), {
      class: F(s(a))
    }, {
      default: N(() => [
        e.html ? (d(), m("div", {
          key: 0,
          innerHTML: e.html
        }, null, 8, Ln)) : h(l.$slots, "default", { key: 1 }, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Pa = /* @__PURE__ */ x({
  __name: "BCardHeader",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    return (t, a) => (d(), O(za, U({ class: "card-header" }, t.$props), {
      default: N(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Na = /* @__PURE__ */ x({
  __name: "BCardTitle",
  props: {
    text: null,
    tag: { default: "h4" }
  },
  setup(e) {
    return (t, a) => (d(), O(J(e.tag), { class: "card-title" }, {
      default: N(() => [
        h(t.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), La = /* @__PURE__ */ x({
  __name: "BCardSubtitle",
  props: {
    text: null,
    tag: { default: "h6" },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = u(() => ({
      [`text-${t.textVariant}`]: !!t.textVariant
    }));
    return (l, n) => (d(), O(J(e.tag), {
      class: F(["card-subtitle mb-2", s(a)])
    }, {
      default: N(() => [
        h(l.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Ea = /* @__PURE__ */ x({
  __name: "BCardBody",
  props: {
    bodyBgVariant: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h4" },
    subtitleTextVariant: null,
    title: null,
    titleTag: { default: "h4" },
    text: null
  },
  setup(e) {
    const t = e, a = r(o(t, "overlay")), l = u(() => ({
      "card-img-overlay": a.value,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0
    }));
    return (n, i) => (d(), O(J(e.bodyTag), {
      class: F(["card-body", s(l)])
    }, {
      default: N(() => [
        !!e.title || n.$slots.title ? (d(), O(Na, {
          key: 0,
          tag: e.titleTag
        }, {
          default: N(() => [
            h(n.$slots, "title", {}, () => [
              Y(q(e.title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : j("", !0),
        !!e.subtitle || !!n.$slots.subtitle ? (d(), O(La, {
          key: 1,
          tag: e.subtitleTag,
          "text-variant": e.subtitleTextVariant
        }, {
          default: N(() => [
            h(n.$slots, "subtitle", {}, () => [
              Y(q(e.subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : j("", !0),
        h(n.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Ha = /* @__PURE__ */ x({
  __name: "BCardFooter",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    return (t, a) => (d(), O(za, U({ class: "card-footer" }, t.$props), {
      default: N(() => [
        h(t.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), Da = /* @__PURE__ */ x({
  __name: "BCard",
  props: {
    align: null,
    bgVariant: null,
    bodyBgVariant: null,
    bodyClass: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    borderVariant: null,
    footer: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: null,
    header: null,
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: null,
    imgAlt: null,
    imgBottom: { default: !1 },
    imgEnd: { default: !1 },
    imgHeight: null,
    imgLeft: { default: !1 },
    imgRight: { default: !1 },
    imgSrc: null,
    imgStart: { default: !1 },
    imgTop: { default: !1 },
    imgWidth: null,
    noBody: { default: !1 },
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "muted" },
    tag: { default: "div" },
    textVariant: null,
    title: null,
    titleTag: { default: "h4" },
    bodyText: { default: "" }
  },
  setup(e) {
    const t = e, a = r(o(t, "imgBottom")), l = r(o(t, "imgEnd")), n = r(o(t, "imgLeft")), i = r(o(t, "imgRight")), c = r(o(t, "imgStart")), f = r(o(t, "noBody")), v = u(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
      "flex-row": n.value || c.value,
      "flex-row-reverse": l.value || i.value
    })), b = u(() => ({
      bgVariant: t.headerBgVariant,
      borderVariant: t.headerBorderVariant,
      html: t.headerHtml,
      tag: t.headerTag,
      textVariant: t.headerTextVariant
    })), g = u(() => ({
      overlay: t.overlay,
      bodyBgVariant: t.bodyBgVariant,
      bodyTag: t.bodyTag,
      bodyTextVariant: t.bodyTextVariant,
      subtitle: t.subtitle,
      subtitleTag: t.subtitleTag,
      subtitleTextVariant: t.subtitleTextVariant,
      title: t.title,
      titleTag: t.titleTag
    })), B = u(() => ({
      bgVariant: t.footerBgVariant,
      borderVariant: t.footerBorderVariant,
      html: t.footerHtml,
      tag: t.footerTag,
      textVariant: t.footerTextVariant
    })), p = u(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth,
      bottom: t.imgBottom,
      end: t.imgEnd,
      left: t.imgLeft,
      right: t.imgRight,
      start: t.imgStart,
      top: t.imgTop
    }));
    return (k, C) => (d(), O(J(e.tag), {
      class: F(["card", s(v)])
    }, {
      default: N(() => [
        s(a) ? j("", !0) : h(k.$slots, "img", { key: 0 }, () => [
          e.imgSrc ? (d(), O(ot, ye(U({ key: 0 }, s(p))), null, 16)) : j("", !0)
        ]),
        e.header || k.$slots.header || e.headerHtml ? (d(), O(Pa, U({ key: 1 }, s(b), { class: e.headerClass }), {
          default: N(() => [
            h(k.$slots, "header", {}, () => [
              Y(q(e.header), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : j("", !0),
        s(f) ? h(k.$slots, "default", { key: 3 }, () => [
          Y(q(e.bodyText), 1)
        ]) : (d(), O(Ea, U({ key: 2 }, s(g), { class: e.bodyClass }), {
          default: N(() => [
            h(k.$slots, "default", {}, () => [
              Y(q(e.bodyText), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])),
        e.footer || k.$slots.footer || e.footerHtml ? (d(), O(Ha, U({ key: 4 }, s(B), { class: e.footerClass }), {
          default: N(() => [
            h(k.$slots, "footer", {}, () => [
              Y(q(e.footer), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : j("", !0),
        s(a) ? h(k.$slots, "img", { key: 5 }, () => [
          e.imgSrc ? (d(), O(ot, ye(U({ key: 0 }, s(p))), null, 16)) : j("", !0)
        ]) : j("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), En = /* @__PURE__ */ x({
  __name: "BCardGroup",
  props: {
    columns: { default: !1 },
    deck: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(o(t, "columns")), l = r(o(t, "deck")), n = u(
      () => l.value ? "card-deck" : a.value ? "card-columns" : "card-group"
    ), i = u(() => ({
      [n.value]: !!n.value
    }));
    return (c, f) => (d(), O(J(e.tag), {
      class: F(s(i))
    }, {
      default: N(() => [
        h(c.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Hn = /* @__PURE__ */ x({
  __name: "BCardText",
  props: {
    text: null,
    tag: { default: "p" }
  },
  setup(e) {
    return (t, a) => (d(), O(J(e.tag), { class: "card-text" }, {
      default: N(() => [
        h(t.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Dn = ["id"], qn = {
  key: 0,
  class: "carousel-indicators"
}, Rn = ["data-bs-target", "data-bs-slide-to", "aria-label"], jn = { class: "carousel-inner" }, Mn = ["data-bs-target"], Gn = /* @__PURE__ */ H("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), Un = { class: "visually-hidden" }, Wn = ["data-bs-target"], Xn = /* @__PURE__ */ H("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), Kn = { class: "visually-hidden" }, qa = Symbol(), Jn = /* @__PURE__ */ x({
  __name: "BCarousel",
  props: {
    startingSlide: { default: 0 },
    id: null,
    imgHeight: null,
    imgWidth: null,
    background: null,
    modelValue: { default: 0 },
    controls: { default: !1 },
    indicators: { default: !1 },
    interval: { default: 5e3 },
    noTouch: { default: !1 },
    noWrap: { default: !1 },
    controlsPrevText: { default: "Previous" },
    controlsNextText: { default: "Next" },
    indicatorsButtonLabel: { default: "Slide" }
  },
  emits: ["sliding-start", "sliding-end"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "controls")), n = r(o(a, "indicators")), i = r(o(a, "noTouch"));
    r(o(a, "noWrap"));
    const c = He(), f = W(), v = W(), b = he(o(a, "id"), "carousel"), g = W([]);
    return ve(f, "slide.bs.carousel", (B) => t("sliding-start", B)), ve(f, "slid.bs.carousel", (B) => t("sliding-end", B)), ge(() => {
      v.value = new Bl(f.value, {
        wrap: !i.value,
        interval: a.interval,
        touch: !i.value
      }), c.default && (g.value = c.default().filter((B) => {
        var p;
        return ((p = B.type) == null ? void 0 : p.__name) === "BCarouselSlide";
      }));
    }), Me(qa, {
      background: a.background,
      width: a.imgWidth,
      height: a.imgHeight
    }), (B, p) => (d(), m("div", {
      id: s(b),
      ref_key: "element",
      ref: f,
      class: "carousel slide",
      "data-bs-ride": "carousel"
    }, [
      s(n) ? (d(), m("div", qn, [
        (d(!0), m(le, null, ie(g.value, (k, C) => (d(), m("button", {
          key: C,
          type: "button",
          "data-bs-target": `#${s(b)}`,
          "data-bs-slide-to": C,
          class: F(C === e.startingSlide ? "active" : ""),
          "aria-current": "true",
          "aria-label": `${e.indicatorsButtonLabel} ${C}`
        }, null, 10, Rn))), 128))
      ])) : j("", !0),
      H("div", jn, [
        h(B.$slots, "default")
      ]),
      s(l) ? (d(), m(le, { key: 1 }, [
        H("button", {
          class: "carousel-control-prev",
          type: "button",
          "data-bs-target": `#${s(b)}`,
          "data-bs-slide": "prev"
        }, [
          Gn,
          H("span", Un, q(e.controlsPrevText), 1)
        ], 8, Mn),
        H("button", {
          class: "carousel-control-next",
          type: "button",
          "data-bs-target": `#${s(b)}`,
          "data-bs-slide": "next"
        }, [
          Xn,
          H("span", Kn, q(e.controlsNextText), 1)
        ], 8, Wn)
      ], 64)) : j("", !0)
    ], 8, Dn));
  }
}), Yn = ["data-bs-interval"], Zn = ["innerHTML"], Qn = { key: 1 }, eo = ["innerHTML"], to = { key: 1 }, ao = /* @__PURE__ */ x({
  __name: "BCarouselSlide",
  props: {
    imgSrc: null,
    imgHeight: null,
    imgWidth: null,
    interval: null,
    active: { default: !1 },
    background: null,
    caption: null,
    captionHtml: null,
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: null,
    id: null,
    imgAlt: null,
    imgBlank: { default: !1 },
    imgBlankColor: { default: "transparent" },
    text: null,
    textHtml: null,
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, a = r(o(t, "active")), l = r(o(t, "imgBlank")), n = Fe(qa, {});
    u(
      () => l.value ? l.value : t.imgSrc
    );
    const i = u(() => ({
      background: `${t.background || n.background || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), c = u(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    })), f = u(() => n.width), v = u(() => n.height);
    return (b, g) => (d(), m("div", {
      class: F(["carousel-item", { active: s(a) }]),
      "data-bs-interval": e.interval,
      style: ze(s(i))
    }, [
      h(b.$slots, "img", {}, () => [
        me(Dt, {
          class: "d-block w-100",
          alt: e.imgAlt,
          src: e.imgSrc,
          width: e.imgWidth || s(f),
          height: e.imgHeight || s(v),
          blank: s(l),
          "blank-color": e.imgBlankColor
        }, null, 8, ["alt", "src", "width", "height", "blank", "blank-color"])
      ]),
      e.caption || e.captionHtml || e.text || e.textHtml || b.$slots.default ? (d(), O(J(e.contentTag), {
        key: 0,
        class: F(["carousel-caption", s(c)])
      }, {
        default: N(() => [
          e.caption || e.captionHtml ? (d(), O(J(e.captionTag), { key: 0 }, {
            default: N(() => [
              e.captionHtml ? (d(), m("span", {
                key: 0,
                innerHTML: e.captionHtml
              }, null, 8, Zn)) : (d(), m("span", Qn, q(e.caption), 1))
            ]),
            _: 1
          })) : j("", !0),
          e.text || e.textHtml ? (d(), O(J(e.textTag), { key: 1 }, {
            default: N(() => [
              e.textHtml ? (d(), m("span", {
                key: 0,
                innerHTML: e.textHtml
              }, null, 8, eo)) : (d(), m("span", to, q(e.text), 1))
            ]),
            _: 1
          })) : j("", !0),
          h(b.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : j("", !0)
    ], 14, Yn));
  }
}), Yt = ct("", [], { type: [Boolean, String, Number], default: !1 }), Zt = ct("offset", [""], { type: [String, Number], default: null }), Qt = ct("order", [""], { type: [String, Number], default: null }), lo = x({
  name: "BCol",
  props: {
    col: { type: [Boolean, String], default: !1 },
    cols: { type: [String, Number], default: null },
    ...Yt,
    offset: { type: [String, Number], default: null },
    ...Zt,
    order: { type: [String, Number], default: null },
    ...Qt,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = r(o(e, "col")), a = [
      { content: Yt, propPrefix: "cols", classPrefix: "col" },
      { content: Zt, propPrefix: "offset" },
      { content: Qt, propPrefix: "order" }
    ], l = u(
      () => a.flatMap((i) => pa(e, i.content, i.propPrefix, i.classPrefix))
    );
    return {
      classes: u(() => ({
        col: t.value || !l.value.some((i) => /^col-/.test(i) && !e.cols),
        [`col-${e.cols}`]: !!e.cols,
        [`offset-${e.offset}`]: !!e.offset,
        [`order-${e.order}`]: !!e.order,
        [`align-self-${e.alignSelf}`]: !!e.alignSelf
      })),
      classList: l
    };
  }
});
function no(e, t, a, l, n, i) {
  return d(), O(J(e.tag), {
    class: F([e.classes, e.classList])
  }, {
    default: N(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const We = /* @__PURE__ */ Be(lo, [["render", no]]), Ra = {
  name: "",
  enterActiveClass: "",
  enterToClass: "",
  leaveActiveClass: "",
  leaveToClass: "showing",
  enterFromClass: "showing",
  leaveFromClass: ""
}, oo = {
  ...Ra,
  enterActiveClass: "fade showing",
  leaveActiveClass: "fade showing"
}, st = x({
  props: {
    appear: { type: [Boolean, String], default: !1 },
    mode: { type: String, required: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    transProps: { type: Object, required: !1 }
  },
  setup(e, { slots: t }) {
    const a = r(o(e, "appear")), l = r(o(e, "noFade")), n = W(e.transProps);
    return da(n.value) || (n.value = l.value ? Ra : oo, a.value && (n.value = {
      ...n.value,
      appear: !0,
      appearClass: n.value.enterClass,
      appearActiveClass: n.value.enterActiveClass,
      appearToClass: n.value.enterToClass
    })), n.value = {
      mode: e.mode,
      ...n.value,
      css: !0
    }, () => Q(
      cl,
      { ...n.value },
      {
        default: () => t.default ? t.default() : []
      }
    );
  }
}), so = "toast-title", ea = 1e3, ja = x({
  components: { BLink: Ce },
  props: {
    ...De,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String },
    body: { type: [Object, String] },
    headerClass: { type: String },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String },
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    static: { type: [Boolean, String], default: !1 },
    title: { type: String },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array },
    variant: { type: String }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: a }) {
    r(o(e, "animation"));
    const l = r(o(e, "isStatus")), n = r(o(e, "autoHide")), i = r(o(e, "noCloseButton")), c = r(o(e, "noFade")), f = r(o(e, "noHoverPause"));
    r(o(e, "solid")), r(o(e, "static"));
    const v = r(o(e, "modelValue")), b = W(!1), g = W(!1), B = W(!1), p = u(() => ({
      [`b-toast-${e.variant}`]: e.variant !== void 0,
      show: B.value || b.value
    }));
    let k, C, y;
    const S = () => {
      typeof k > "u" || (clearTimeout(k), k = void 0);
    }, $ = u(
      () => Math.max(je(e.delay, 0), ea)
    ), z = () => {
      v.value && (C = y = 0, S(), g.value = !0, Ze(() => {
        B.value = !1;
      }));
    }, L = () => {
      S(), t("update:modelValue", !0), C = y = 0, g.value = !1, Oe(() => {
        Ze(() => {
          B.value = !0;
        });
      });
    }, V = () => {
      if (!n.value || f.value || !k || y)
        return;
      const ne = Date.now() - C;
      ne > 0 && (S(), y = Math.max($.value - ne, ea));
    }, A = () => {
      (!n.value || f.value || !y) && (y = C = 0), I();
    };
    re(
      () => v.value,
      (ne) => {
        ne ? L() : z();
      }
    );
    const I = () => {
      S(), n.value && (k = setTimeout(z, y || $.value), C = Date.now(), y = 0);
    }, M = () => {
      b.value = !0, t("update:modelValue", !0);
    }, _ = () => {
      b.value = !1, I();
    }, T = () => {
      b.value = !0;
    }, D = () => {
      b.value = !1, y = C = 0, t("update:modelValue", !1);
    };
    fl(() => {
      S(), n.value && t("destroyed", e.id);
    }), ge(() => {
      Oe(() => {
        v.value && Ze(() => {
          L();
        });
      });
    });
    const R = () => {
      Oe(() => {
        Ze(() => {
          z();
        });
      });
    };
    return () => {
      const ne = () => {
        const ae = [], K = Se(so, { hide: z }, a);
        K ? ae.push(Q(K)) : e.title && ae.push(Q("strong", { class: "me-auto" }, e.title)), !i.value && ae.length !== 0 && ae.push(
          Q(Ge, {
            class: ["btn-close"],
            onClick: () => {
              z();
            }
          })
        );
        const de = [];
        if (ae.length > 0 && de.push(
          Q(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => ae }
          )
        ), Se("default", { hide: z }, a) || e.body) {
          const se = Q(
            Xe(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: Xe(e) ? { click: R } : {}
            },
            Se("default", { hide: z }, a) || e.body
          );
          de.push(se);
        }
        return Q(
          "div",
          {
            class: ["toast", e.toastClass, p.value],
            tabindex: "0"
          },
          de
        );
      };
      return Q(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: g.value ? null : l.value ? "status" : "alert",
          "aria-live": g.value ? null : l.value ? "polite" : "assertive",
          "aria-atomic": g.value ? null : "true",
          onmouseenter: V,
          onmouseleave: A
        },
        [
          Q(
            st,
            {
              noFade: c.value,
              onAfterEnter: _,
              onBeforeEnter: M,
              onAfterLeave: D,
              onBeforeLeave: T
            },
            () => [B.value ? ne() : ""]
          )
        ]
      );
    };
  }
}), _t = /* @__PURE__ */ x({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: null
  },
  setup(e) {
    const t = e, a = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, l = u(() => a[t.position]), n = (i) => {
      var c;
      (c = t.instance) == null || c.remove(i);
    };
    return (i, c) => {
      var f;
      return d(), m("div", {
        class: F([[s(l)], "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (d(!0), m(le, null, ie((f = e.instance) == null ? void 0 : f.toasts(e.position).value, (v) => (d(), O(ja, {
          id: v.options.id,
          key: v.options.id,
          modelValue: v.options.value,
          "onUpdate:modelValue": (b) => v.options.value = b,
          delay: v.options.delay,
          title: v.content.title,
          body: v.content.body,
          component: v.content.body,
          variant: v.options.variant,
          onDestroyed: n
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "delay", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), qe = { delay: 5e3, value: !0, pos: "top-right" };
class ta {
  constructor(t) {
    fe(this, "vm");
    fe(this, "containerPositions");
    vl(t) ? this.vm = t : this.vm = Ie(t), this.containerPositions = u(() => {
      const a = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((l) => {
        l.options.pos && a.add(l.options.pos);
      }), a;
    });
  }
  toasts(t) {
    return t ? u(
      () => this.vm.toasts.filter((a) => {
        if (a.options.pos === t && a.options.value)
          return a;
      })
    ) : u(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((a) => {
      if (a.options.id && !t.includes(a.options.id))
        return a;
    });
  }
  isRoot() {
    var t;
    return (t = this.vm.root) != null ? t : !1;
  }
  show(t, a = qe) {
    const l = { id: xe(), ...qe, ...a }, n = {
      options: Ie(l),
      content: t
    };
    return this.vm.toasts.push(n), n;
  }
  info(t, a = qe) {
    return this.show(t, { variant: "info", ...a });
  }
  danger(t, a = qe) {
    return this.show(t, { variant: "danger", ...a });
  }
  warning(t, a = qe) {
    return this.show(t, { variant: "warning", ...a });
  }
  success(t, a = qe) {
    return this.show(t, { variant: "success", ...a });
  }
  hide() {
  }
}
class ro {
  constructor() {
    fe(this, "vms");
    fe(this, "rootInstance");
    fe(this, "useToast", Ga);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const a = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = a.id, this.vms[a.id] = a, a;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const At = Symbol(), Ma = Symbol(), io = {
  container: void 0,
  toasts: [],
  root: !1
};
function uo() {
  return Fe(Ma);
}
function Ga(e, t = At) {
  const a = Fe(uo());
  if (!e)
    return new ta(a.getOrCreateViewModel());
  const l = { id: Symbol("toastInstance") }, n = { ...io, ...l, ...e }, i = a.getOrCreateViewModel(n);
  return new ta(i);
}
const co = {
  install: (e, t = {}) => {
    var a, l, n, i;
    e.provide(Ma, (l = (a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) != null ? l : At), e.provide((i = (n = t == null ? void 0 : t.BToast) == null ? void 0 : n.injectkey) != null ? i : At, new ro());
  }
}, fo = x({
  name: "BContainer",
  props: {
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    fluid: { type: [Boolean, String], default: !1 },
    toast: { type: Object },
    position: { type: String, required: !1 },
    tag: { type: String, default: "div" }
  },
  setup(e, { slots: t, expose: a }) {
    const l = W();
    let n;
    const i = u(() => ({
      container: !e.fluid,
      ["container-fluid"]: typeof e.fluid == "boolean" && e.fluid,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== null,
      [`gy-${e.gutterY}`]: e.gutterY !== null
    }));
    return ge(() => {
      e.toast;
    }), e.toast && (n = Ga({ container: l, root: e.toast.root }), a({})), () => {
      var f;
      const c = [];
      return n == null || n.containerPositions.value.forEach((v) => {
        c.push(Q(_t, { key: v, instance: n, position: v }));
      }), Q(e.tag, { class: [i.value, e.position], ref: l }, [
        ...c,
        (f = t.default) == null ? void 0 : f.call(t)
      ]);
    };
  },
  methods: {}
}), vo = { class: "visually-hidden" }, mo = ["aria-labelledby", "role"], Ua = /* @__PURE__ */ x({
  __name: "BDropdown",
  props: {
    id: null,
    menuClass: null,
    size: null,
    splitClass: null,
    splitVariant: null,
    text: null,
    toggleClass: null,
    autoClose: { type: [Boolean, String], default: !0 },
    block: { default: !1 },
    boundary: { default: "clippingParents" },
    dark: { default: !1 },
    disabled: { default: !1 },
    isNav: { default: !1 },
    dropup: { default: !1 },
    dropright: { default: !1 },
    dropleft: { default: !1 },
    noFlip: { default: !1 },
    offset: { default: 0 },
    popperOpts: { default: () => ({}) },
    right: { default: !1 },
    role: { default: "menu" },
    split: { default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    noCaret: { default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" }
  },
  emits: ["show", "shown", "hide", "hidden", "click", "toggle"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = r(o(l, "block")), i = r(o(l, "dark")), c = r(o(l, "disabled")), f = r(o(l, "dropup")), v = r(o(l, "dropright")), b = r(o(l, "isNav")), g = r(o(l, "dropleft")), B = r(o(l, "right")), p = r(o(l, "split")), k = r(o(l, "noCaret")), C = W(), y = W(), S = W(), $ = he(o(l, "id"), "dropdown");
    ve(C, "show.bs.dropdown", () => a("show")), ve(C, "shown.bs.dropdown", () => a("shown")), ve(C, "hide.bs.dropdown", () => a("hide")), ve(C, "hidden.bs.dropdown", () => a("hidden"));
    const z = (T) => {
      p.value && a("click", T);
    }, L = u(() => ({
      "d-grid": n.value,
      "d-flex": n.value && p.value
    })), V = u(() => ({
      "nav-link": b.value,
      "dropdown-toggle": !p.value,
      "dropdown-toggle-no-caret": k.value && !p.value,
      "w-100": p.value && n.value
    })), A = u(() => ({
      "dropdown-menu-dark": i.value,
      "dropdown-menu-end": B.value
    })), I = u(() => ({
      "data-bs-toggle": p.value ? void 0 : "dropdown",
      "aria-expanded": p.value ? void 0 : !1,
      ref: p.value ? void 0 : y,
      href: p.value ? l.splitHref : void 0
    })), M = u(() => ({
      ref: p.value ? y : void 0
    })), _ = () => {
      var T;
      (T = S.value) == null || T.hide();
    };
    return ge(() => {
      var T;
      S.value = new $l((T = y.value) == null ? void 0 : T.$el, {
        autoClose: l.autoClose,
        boundary: l.boundary,
        offset: l.offset ? l.offset.toString() : "",
        reference: l.offset || p.value ? "parent" : "toggle",
        popperConfig: (D) => {
          const R = {
            placement: "bottom-start",
            modifiers: l.noFlip ? [
              {
                name: "flip",
                options: {
                  fallbackPlacements: []
                }
              }
            ] : []
          };
          return f.value ? R.placement = B.value ? "top-end" : "top-start" : v.value ? R.placement = "right-start" : g.value ? R.placement = "left-start" : B.value && (R.placement = "bottom-end"), Tt(D, Tt(R, l.popperOpts));
        }
      });
    }), t({
      hide: _
    }), (T, D) => (d(), m("div", {
      ref_key: "parent",
      ref: C,
      class: F([s(L), "btn-group"])
    }, [
      me(Ke, U({
        id: s($),
        variant: e.splitVariant || e.variant,
        size: e.size,
        class: [s(V), s(p) ? e.splitClass : e.toggleClass],
        disabled: s(c),
        type: e.splitButtonType
      }, s(I), { onClick: z }), {
        default: N(() => [
          h(T.$slots, "button-content", {}, () => [
            Y(q(e.text), 1)
          ])
        ]),
        _: 3
      }, 16, ["id", "variant", "size", "class", "disabled", "type"]),
      s(p) ? (d(), O(Ke, U({
        key: 0,
        variant: e.variant,
        size: e.size,
        disabled: s(c)
      }, s(M), {
        class: [e.toggleClass, "dropdown-toggle-split dropdown-toggle"],
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false",
        onClick: D[0] || (D[0] = (R) => a("toggle"))
      }), {
        default: N(() => [
          H("span", vo, [
            h(T.$slots, "toggle-text", {}, () => [
              Y(q(e.toggleText), 1)
            ])
          ])
        ]),
        _: 3
      }, 16, ["variant", "size", "disabled", "class"])) : j("", !0),
      H("ul", {
        class: F(["dropdown-menu", [e.menuClass, s(A)]]),
        "aria-labelledby": s($),
        role: e.role
      }, [
        h(T.$slots, "default")
      ], 10, mo)
    ], 2));
  }
}), bo = { role: "presentation" }, go = /* @__PURE__ */ x({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, a) => (d(), m("li", bo, [
      (d(), O(J(e.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), po = {}, ho = { role: "presentation" }, yo = { class: "px-4 py-3" };
function Bo(e, t) {
  return d(), m("li", ho, [
    H("form", yo, [
      h(e.$slots, "default")
    ])
  ]);
}
const $o = /* @__PURE__ */ Be(po, [["render", Bo]]), ko = { role: "presentation" }, So = ["id", "aria-describedby"], Co = {
  inheritAttrs: !1
}, wo = /* @__PURE__ */ x({
  ...Co,
  __name: "BDropdownGroup",
  props: {
    id: null,
    ariaDescribedby: null,
    header: null,
    headerClass: { default: void 0 },
    headerTag: { default: "header" },
    headerVariant: null
  },
  setup(e) {
    const t = e, a = u(
      () => t.id ? `${t.id}_group_dd_header` : void 0
    ), l = u(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), n = u(() => ({
      [`text-${t.headerVariant}`]: t.headerVariant !== void 0
    }));
    return (i, c) => (d(), m("li", ko, [
      (d(), O(J(e.headerTag), {
        id: s(a),
        class: F(["dropdown-header", [s(n), e.headerClass]]),
        role: s(l)
      }, {
        default: N(() => [
          h(i.$slots, "header", {}, () => [
            Y(q(e.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      H("ul", U({
        id: e.id,
        role: "group",
        class: "list-unstyled"
      }, i.$attrs, {
        "aria-describedby": e.ariaDescribedby || s(a)
      }), [
        h(i.$slots, "default")
      ], 16, So)
    ]));
  }
}), To = {}, Vo = { class: "dropdown-header" };
function _o(e, t) {
  return d(), m("li", null, [
    H("h6", Vo, [
      h(e.$slots, "default")
    ])
  ]);
}
const Ao = /* @__PURE__ */ Be(To, [["render", _o]]), xo = {
  inheritAttrs: !1
}, Io = /* @__PURE__ */ x({
  ...xo,
  __name: "BDropdownItem",
  props: {
    href: null,
    linkClass: null,
    active: { default: !1 },
    disabled: { default: !1 },
    rel: { default: void 0 },
    target: { default: "_self" },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "active")), n = r(o(a, "disabled")), i = ra(), c = u(() => ({
      active: l.value,
      disabled: n.value,
      [`text-${a.variant}`]: a.variant !== void 0
    })), f = u(
      () => a.href ? "a" : i.to ? Ce : "button"
    ), v = u(() => ({
      disabled: n.value,
      "aria-current": l.value ? "true" : null,
      href: f.value === "a" ? a.href : null,
      rel: a.rel,
      type: f.value === "button" ? "button" : null,
      target: a.target,
      ...i.to ? { activeClass: "active", ...i } : {}
    })), b = (g) => t("click", g);
    return (g, B) => (d(), m("li", {
      role: "presentation",
      class: F(g.$attrs.class)
    }, [
      (d(), O(J(s(f)), U({
        class: ["dropdown-item", [s(c), e.linkClass]]
      }, s(v), { onClick: b }), {
        default: N(() => [
          h(g.$slots, "default")
        ]),
        _: 3
      }, 16, ["class"]))
    ], 2));
  }
}), Fo = {
  inheritAttrs: !1
}, Oo = /* @__PURE__ */ x({
  ...Fo,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: null,
    active: { default: !1 },
    activeClass: { default: "active" },
    disabled: { default: !1 },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "active")), n = r(o(a, "disabled")), i = u(() => ({
      [a.activeClass]: l.value,
      disabled: n.value,
      [`text-${a.variant}`]: a.variant !== void 0
    })), c = u(() => ({
      disabled: n.value
    })), f = (v) => t("click", v);
    return (v, b) => (d(), m("li", {
      role: "presentation",
      class: F(v.$attrs.class)
    }, [
      H("button", U({
        role: "menu",
        type: "button",
        class: ["dropdown-item", [s(i), e.buttonClass]]
      }, s(c), { onClick: f }), [
        h(v.$slots, "default")
      ], 16)
    ], 2));
  }
}), zo = { role: "presentation" }, Po = { class: "px-4 py-1 mb-0 text-muted" }, No = /* @__PURE__ */ x({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(e) {
    return (t, a) => (d(), m("li", zo, [
      H("p", Po, [
        h(t.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ])
    ]));
  }
}), Lo = ["id", "novalidate", "onSubmit"], Wa = /* @__PURE__ */ x({
  __name: "BForm",
  props: {
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "floating")), n = r(o(a, "novalidate")), i = r(o(a, "validated")), c = u(() => ({
      "form-floating": l.value,
      "was-validated": i.value
    })), f = (v) => t("submit", v);
    return (v, b) => (d(), m("form", {
      id: e.id,
      novalidate: s(n),
      class: F(s(c)),
      onSubmit: it(f, ["prevent"])
    }, [
      h(v.$slots, "default")
    ], 42, Lo));
  }
}), Eo = { class: "form-floating" }, Ho = ["for"], Do = /* @__PURE__ */ x({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: null,
    label: null,
    text: null
  },
  setup(e) {
    return (t, a) => (d(), m("div", Eo, [
      h(t.$slots, "default", {}, () => [
        Y(q(e.text), 1)
      ]),
      H("label", { for: e.labelFor }, [
        h(t.$slots, "label", {}, () => [
          Y(q(e.label), 1)
        ])
      ], 8, Ho)
    ]));
  }
}), xt = /* @__PURE__ */ x({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    text: null,
    role: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "forceShow")), l = r(o(t, "state")), n = r(o(t, "tooltip")), i = u(
      () => a.value === !0 || l.value === !1
    ), c = u(() => ({
      "d-block": i.value,
      "invalid-feedback": !n.value,
      "invalid-tooltip": n.value
    })), f = u(() => ({
      id: t.id,
      role: t.role,
      "aria-live": t.ariaLive,
      "aria-atomic": t.ariaLive ? "true" : void 0
    }));
    return (v, b) => (d(), O(J(e.tag), U({ class: s(c) }, s(f)), {
      default: N(() => [
        h(v.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), tt = /* @__PURE__ */ x({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (d(), O(J(e.tag), { class: "row d-flex flex-wrap" }, {
      default: N(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), It = /* @__PURE__ */ x({
  __name: "BFormText",
  props: {
    id: null,
    inline: { default: !1 },
    tag: { default: "small" },
    text: null,
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = r(o(t, "inline")), l = u(() => ({
      "form-text": !a.value,
      [`text-${t.textVariant}`]: !!t.textVariant
    })), n = u(() => ({
      id: t.id
    }));
    return (i, c) => (d(), O(J(e.tag), U({ class: s(l) }, s(n)), {
      default: N(() => [
        h(i.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), Ft = /* @__PURE__ */ x({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    role: null,
    text: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "forceShow")), l = r(o(t, "state")), n = r(o(t, "tooltip")), i = u(
      () => a.value === !0 || l.value === !0
    ), c = u(() => ({
      "d-block": i.value,
      "valid-feedback": !n.value,
      "valid-tooltip": n.value
    })), f = u(() => ({
      id: t.id || null,
      role: t.role || null,
      "aria-live": t.ariaLive || null,
      "aria-atomic": t.ariaLive ? "true" : null
    }));
    return (v, b) => (d(), O(J(e.tag), U({ class: s(c) }, s(f)), {
      default: N(() => [
        h(v.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), qo = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], Ro = ["for"], jo = {
  inheritAttrs: !1
}, Xa = /* @__PURE__ */ x({
  ...jo,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    indeterminate: null,
    name: null,
    id: { default: void 0 },
    autofocus: { default: !1 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: void 0 },
    size: { default: "md" },
    state: { default: void 0 },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number], default: !1 },
    value: { type: [Array, Set, Boolean, String, Object, Number], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { emit: t }) {
    const a = e, l = r(
      o(a, "indeterminate")
    ), n = r(o(a, "autofocus")), i = r(o(a, "plain")), c = r(o(a, "button")), f = r(o(a, "switch")), v = r(o(a, "disabled")), b = r(o(a, "inline")), g = r(o(a, "required")), B = r(o(a, "state")), p = he(o(a, "id"), "form-check"), k = W(null), C = W(!1), y = u({
      get: () => a.uncheckedValue ? Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : a.modelValue === a.value : a.modelValue,
      set: (A) => {
        let I = A;
        Array.isArray(a.modelValue) ? a.uncheckedValue && (I = a.modelValue, A ? (I.indexOf(a.uncheckedValue) > -1 && I.splice(I.indexOf(a.uncheckedValue), 1), I.push(a.value)) : (I.indexOf(a.value) > -1 && I.splice(I.indexOf(a.value), 1), I.push(a.uncheckedValue))) : I = A ? a.value : a.uncheckedValue, t("input", I), t("update:modelValue", I), t("change", I);
      }
    }), S = u(() => Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), $ = Ie({
      plain: o(i, "value"),
      button: o(c, "value"),
      inline: o(b, "value"),
      switch: o(f, "value"),
      size: o(a, "size"),
      state: o(B, "value"),
      buttonVariant: o(a, "buttonVariant")
    }), z = Ba($), L = $a($), V = ka($);
    return ge(() => {
      n.value && k.value.focus();
    }), (A, I) => (d(), m("div", {
      class: F(s(z))
    }, [
      Je(H("input", U({ id: s(p) }, A.$attrs, {
        ref_key: "input",
        ref: k,
        "onUpdate:modelValue": I[0] || (I[0] = (M) => Ye(y) ? y.value = M : null),
        class: s(L),
        type: "checkbox",
        disabled: s(v),
        required: !!e.name && !!s(g),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        "aria-required": e.name && s(g) ? "true" : void 0,
        value: e.value,
        indeterminate: s(l),
        onFocus: I[1] || (I[1] = (M) => C.value = !0),
        onBlur: I[2] || (I[2] = (M) => C.value = !1)
      }), null, 16, qo), [
        [ml, s(y)]
      ]),
      A.$slots.default || !s(i) ? (d(), m("label", {
        key: 0,
        for: s(p),
        class: F([s(V), { active: s(S), focus: C.value }])
      }, [
        h(A.$slots, "default")
      ], 10, Ro)) : j("", !0)
    ], 2));
  }
}), Mo = ["id"], Go = ["innerHTML"], Uo = ["textContent"], Wo = /* @__PURE__ */ x({
  __name: "BFormCheckboxGroup",
  props: {
    id: null,
    form: null,
    modelValue: { default: () => [] },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: null,
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    size: null,
    stacked: { default: !1 },
    state: { default: void 0 },
    switches: { default: !1 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e;
    r(o(a, "autofocus"));
    const l = r(o(a, "buttons")), n = r(o(a, "disabled"));
    r(o(a, "plain"));
    const i = r(o(a, "required")), c = r(o(a, "stacked")), f = r(o(a, "state")), v = r(o(a, "switches")), b = r(o(a, "validated")), g = He(), B = "BFormCheckbox", p = he(o(a, "id"), "checkbox"), k = he(o(a, "name"), "checkbox"), C = u({
      get: () => a.modelValue,
      set: (L) => {
        if (JSON.stringify(L) === JSON.stringify(a.modelValue))
          return;
        const V = a.options.filter(
          (A) => L.map((I) => JSON.stringify(I)).includes(JSON.stringify(typeof A == "string" ? A : A[a.valueField]))
        ).map((A) => typeof A == "string" ? A : A[a.valueField]);
        t("input", V), t("update:modelValue", V), t("change", V);
      }
    }), y = u(
      () => (g.first ? nt(g.first(), B, n.value) : []).concat(a.options.map((L) => wa(L, a))).concat(g.default ? nt(g.default(), B, n.value) : []).map((L, V) => Ta(L, V, a, k, p)).map((L) => ({
        ...L,
        props: {
          switch: v.value,
          ...L.props
        }
      }))
    ), S = Ie({
      required: o(i, "value"),
      ariaInvalid: o(a, "ariaInvalid"),
      state: o(f, "value"),
      validated: o(b, "value"),
      buttons: o(l, "value"),
      stacked: o(c, "value"),
      size: o(a, "size")
    }), $ = Sa(S), z = Ca(S);
    return (L, V) => (d(), m("div", U(s($), {
      id: s(p),
      role: "group",
      class: [s(z), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (d(!0), m(le, null, ie(s(y), (A, I) => (d(), O(Xa, U({
        key: I,
        modelValue: s(C),
        "onUpdate:modelValue": V[0] || (V[0] = (M) => Ye(C) ? C.value = M : null)
      }, A.props), {
        default: N(() => [
          A.html ? (d(), m("span", {
            key: 0,
            innerHTML: A.html
          }, null, 8, Go)) : (d(), m("span", {
            key: 1,
            textContent: q(A.text)
          }, null, 8, Uo))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, Mo));
  }
}), Ka = ["input", "select", "textarea"], Xo = Ka.map((e) => `${e}:not([disabled])`).join(), Ko = [...Ka, "a", "button", "label"], Jo = "label", Yo = "invalid-feedback", Zo = "valid-feedback", Qo = "description", es = "default", ts = x({
  components: { BCol: We, BFormInvalidFeedback: xt, BFormRow: tt, BFormText: It, BFormValidFeedback: Ft },
  props: {
    contentCols: { type: [Boolean, String, Number], required: !1 },
    contentColsLg: { type: [Boolean, String, Number], required: !1 },
    contentColsMd: { type: [Boolean, String, Number], required: !1 },
    contentColsSm: { type: [Boolean, String, Number], required: !1 },
    contentColsXl: { type: [Boolean, String, Number], required: !1 },
    description: { type: [String], required: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, required: !1 },
    invalidFeedback: { type: String, required: !1 },
    label: { type: String, required: !1 },
    labelAlign: { type: [Boolean, String, Number], required: !1 },
    labelAlignLg: { type: [Boolean, String, Number], required: !1 },
    labelAlignMd: { type: [Boolean, String, Number], required: !1 },
    labelAlignSm: { type: [Boolean, String, Number], required: !1 },
    labelAlignXl: { type: [Boolean, String, Number], required: !1 },
    labelClass: { type: [Array, Object, String], required: !1 },
    labelCols: { type: [Boolean, String, Number], required: !1 },
    labelColsLg: { type: [Boolean, String, Number], required: !1 },
    labelColsMd: { type: [Boolean, String, Number], required: !1 },
    labelColsSm: { type: [Boolean, String, Number], required: !1 },
    labelColsXl: { type: [Boolean, String, Number], required: !1 },
    labelFor: { type: String, required: !1 },
    labelSize: { type: String, required: !1 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, required: !1 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const a = r(o(e, "disabled")), l = r(o(e, "labelSrOnly")), n = r(o(e, "state")), i = r(o(e, "tooltip")), c = r(o(e, "validated")), f = r(o(e, "floating")), v = null, b = ["xs", "sm", "md", "lg", "xl"], g = (I, M) => b.reduce((_, T) => {
      const D = Ut(T === "xs" ? "" : T, `${M}Align`), R = I[D] || null;
      return R && (T === "xs" ? _.push(`text-${R}`) : _.push(`text-${T}-${R}`)), _;
    }, []), B = (I, M) => b.reduce((_, T) => {
      const D = Ut(T === "xs" ? "" : T, `${M}Cols`);
      let R = I[D];
      return R = R === "" ? !0 : R || !1, typeof R != "boolean" && R !== "auto" && (R = Ue(R, 0), R = R > 0 ? R : !1), R && (T === "xs" ? _.cols = R : _[T || (typeof R == "boolean" ? "col" : "cols")] = R), _;
    }, {}), p = W(), k = (I, M = null) => {
      if (Ol && e.labelFor) {
        const _ = Dl(`#${Il(e.labelFor)}`, p);
        if (_) {
          const T = "aria-describedby", D = (I || "").split(Qe), R = (M || "").split(Qe), ne = (ga(_, T) || "").split(Qe).filter((ae) => !R.includes(ae)).concat(D).filter((ae, K, de) => de.indexOf(ae) === K).filter((ae) => ae).join(" ").trim();
          ne ? Rl(_, T, ne) : jl(_, T);
        }
      }
    }, C = u(() => B(e, "content")), y = u(() => g(e, "label")), S = u(() => B(e, "label")), $ = u(
      () => Object.keys(C.value).length > 0 || Object.keys(S.value).length > 0
    ), z = u(
      () => typeof n.value == "boolean" ? n.value : null
    ), L = u(() => {
      const I = z.value;
      return I === !0 ? "is-valid" : I === !1 ? "is-invalid" : null;
    }), V = u(
      () => ft(t.ariaInvalid, n.value)
    );
    return re(
      () => v,
      (I, M) => {
        I !== M && k(I, M);
      }
    ), ge(() => {
      Oe(() => {
        k(v);
      });
    }), {
      disabledBoolean: a,
      labelSrOnlyBoolean: l,
      stateBoolean: n,
      tooltipBoolean: i,
      validatedBoolean: c,
      floatingBoolean: f,
      ariaDescribedby: v,
      computedAriaInvalid: V,
      contentColProps: C,
      isHorizontal: $,
      labelAlignClasses: y,
      labelColProps: S,
      onLegendClick: (I) => {
        if (e.labelFor)
          return;
        const { target: M } = I, _ = M ? M.tagName : "";
        if (Ko.indexOf(_) !== -1)
          return;
        const T = ql(Xo, p).filter(Hl);
        T.length === 1 && Ll(T[0]);
      },
      stateClass: L
    };
  },
  render() {
    const e = this.$props, t = this.$slots, a = he(), l = !e.labelFor;
    let n = null;
    const i = Se(Jo, {}, t) || e.label, c = i ? xe("_BV_label_") : null;
    if (i || this.isHorizontal) {
      const V = l ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        i && (n = Q(
          V,
          {
            class: "visually-hidden",
            id: c,
            for: e.labelFor || null
          },
          i
        )), this.isHorizontal ? n = Q(We, this.labelColProps, { default: () => n }) : n = Q("div", {}, [n]);
      else {
        const A = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? V : null,
          id: c,
          for: e.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? n = Q(We, A, { default: () => i }) : n = Q(V, A, i);
      }
    }
    let f = null;
    const v = Se(Yo, {}, t) || this.invalidFeedback, b = v ? xe("_BV_feedback_invalid_") : void 0;
    v && (f = Q(
      xt,
      {
        ariaLive: e.feedbackAriaLive,
        id: b,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => v }
    ));
    let g = null;
    const B = Se(Zo, {}, t) || this.validFeedback, p = B ? xe("_BV_feedback_valid_") : void 0;
    B && (g = Q(
      Ft,
      {
        ariaLive: e.feedbackAriaLive,
        id: p,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => B }
    ));
    let k = null;
    const C = Se(Qo, {}, t) || this.description, y = C ? xe("_BV_description_") : void 0;
    C && (k = Q(
      It,
      {
        id: y
      },
      { default: () => C }
    ));
    const S = this.ariaDescribedby = [
      y,
      this.stateBoolean === !1 ? b : null,
      this.stateBoolean === !0 ? p : null
    ].filter((V) => V).join(" ") || null, $ = [
      Se(es, { ariaDescribedby: S, descriptionId: y, id: a, labelId: c }, t) || "",
      f,
      g,
      k
    ];
    !this.isHorizontal && this.floatingBoolean && $.push(n);
    let z = Q(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      $
    );
    this.isHorizontal && (z = Q(We, { ref: "content", ...this.contentColProps }, { default: () => $ }));
    const L = {
      class: [
        "mb-3",
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: he(o(e, "id")).value,
      disabled: l ? this.disabledBoolean : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      "aria-labelledby": l && this.isHorizontal ? c : null
    };
    return this.isHorizontal && !l ? Q(tt, L, { default: () => [n, z] }) : Q(
      l ? "fieldset" : "div",
      L,
      this.isHorizontal && l ? [Q(tt, {}, { default: () => [n, z] })] : this.isHorizontal || !this.floatingBoolean ? [n, z] : [z]
    );
  }
}), aa = [
  "text",
  "number",
  "email",
  "password",
  "search",
  "url",
  "tel",
  "date",
  "time",
  "range",
  "color"
], as = x({
  props: {
    ...Va,
    max: { type: [String, Number], required: !1 },
    min: { type: [String, Number], required: !1 },
    step: { type: [String, Number], required: !1 },
    type: {
      type: String,
      default: "text",
      validator: (e) => aa.includes(e)
    }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const a = u(() => {
      const p = e.type === "range", k = e.type === "color";
      return {
        "form-range": p,
        "form-control": k || !e.plaintext && !p,
        "form-control-color": k,
        "form-control-plaintext": e.plaintext && !p && !k,
        [`form-control-${e.size}`]: !!e.size,
        "is-valid": e.state === !0,
        "is-invalid": e.state === !1
      };
    }), l = u(
      () => aa.includes(e.type) ? e.type : "text"
    ), { input: n, computedId: i, computedAriaInvalid: c, onInput: f, onChange: v, onBlur: b, focus: g, blur: B } = _a(e, t);
    return {
      classes: a,
      localType: l,
      input: n,
      computedId: i,
      computedAriaInvalid: c,
      onInput: f,
      onChange: v,
      onBlur: b,
      focus: g,
      blur: B
    };
  }
}), ls = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"];
function ns(e, t, a, l, n, i) {
  return d(), m("input", U({
    id: e.computedId,
    ref: "input",
    class: e.classes,
    name: e.name || void 0,
    form: e.form || void 0,
    type: e.localType,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    min: e.min,
    max: e.max,
    step: e.step,
    list: e.type !== "password" ? e.list : void 0,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (c) => e.onInput(c)),
    onChange: t[1] || (t[1] = (c) => e.onChange(c)),
    onBlur: t[2] || (t[2] = (c) => e.onBlur(c))
  }), null, 16, ls);
}
const os = /* @__PURE__ */ Be(as, [["render", ns]]), ss = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], rs = ["for"], Ja = /* @__PURE__ */ x({
  __name: "BFormRadio",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    id: null,
    name: null,
    size: null,
    autofocus: { default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number], default: void 0 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: !1 },
    state: { default: void 0 },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "autofocus")), n = r(o(a, "plain")), i = r(o(a, "button")), c = r(o(a, "switch")), f = r(o(a, "disabled")), v = r(o(a, "inline")), b = r(o(a, "required")), g = r(o(a, "state")), B = he(o(a, "id"), "form-check"), p = W(null), k = W(!1), C = u({
      get: () => Array.isArray(a.modelValue) ? a.modelValue[0] : a.modelValue,
      set: (V) => {
        const A = V ? a.value : !1, I = Array.isArray(a.modelValue) ? [A] : A;
        t("input", I), t("change", I), t("update:modelValue", I);
      }
    }), y = u(() => Array.isArray(a.modelValue) ? (a.modelValue || []).find((V) => V === a.value) : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), S = Ie({
      plain: o(n, "value"),
      button: o(i, "value"),
      inline: o(v, "value"),
      switch: o(c, "value"),
      size: o(a, "size"),
      state: o(g, "value"),
      buttonVariant: o(a, "buttonVariant")
    }), $ = Ba(S), z = $a(S), L = ka(S);
    return ge(() => {
      l.value && p.value.focus();
    }), (V, A) => (d(), m("div", {
      class: F(s($))
    }, [
      Je(H("input", U({ id: s(B) }, V.$attrs, {
        ref_key: "input",
        ref: p,
        "onUpdate:modelValue": A[0] || (A[0] = (I) => Ye(C) ? C.value = I : null),
        class: s(z),
        type: "radio",
        disabled: s(f),
        required: !!e.name && !!s(b),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        value: e.value,
        "aria-required": e.name && s(b) ? !0 : void 0,
        onFocus: A[1] || (A[1] = (I) => k.value = !0),
        onBlur: A[2] || (A[2] = (I) => k.value = !1)
      }), null, 16, ss), [
        [bl, s(C)]
      ]),
      V.$slots.default || !s(n) ? (d(), m("label", {
        key: 0,
        for: s(B),
        class: F([s(L), { active: s(y), focus: k.value }])
      }, [
        h(V.$slots, "default")
      ], 10, rs)) : j("", !0)
    ], 2));
  }
}), is = ["id"], us = ["innerHTML"], ds = ["textContent"], cs = /* @__PURE__ */ x({
  __name: "BFormRadioGroup",
  props: {
    size: null,
    form: null,
    id: null,
    name: null,
    modelValue: { type: [String, Boolean, Array, Object, Number], default: "" },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    stacked: { default: !1 },
    state: { default: void 0 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e;
    r(o(a, "autofocus"));
    const l = r(o(a, "buttons")), n = r(o(a, "disabled"));
    r(o(a, "plain"));
    const i = r(o(a, "required")), c = r(o(a, "stacked")), f = r(o(a, "state")), v = r(o(a, "validated")), b = He(), g = "BFormRadio", B = he(o(a, "id"), "radio"), p = he(o(a, "name"), "checkbox"), k = u({
      get: () => a.modelValue,
      set: (z) => {
        t("input", z), t("update:modelValue", z), t("change", z);
      }
    }), C = u(
      () => (b.first ? nt(b.first(), g, n.value) : []).concat(a.options.map((z) => wa(z, a))).concat(b.default ? nt(b.default(), g, n.value) : []).map((z, L) => Ta(z, L, a, p, B)).map((z) => ({
        ...z
      }))
    ), y = Ie({
      required: o(i, "value"),
      ariaInvalid: o(a, "ariaInvalid"),
      state: o(f, "value"),
      validated: o(v, "value"),
      buttons: o(l, "value"),
      stacked: o(c, "value"),
      size: o(a, "size")
    }), S = Sa(y), $ = Ca(y);
    return (z, L) => (d(), m("div", U(s(S), {
      id: s(B),
      role: "radiogroup",
      class: [s($), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (d(!0), m(le, null, ie(s(C), (V, A) => (d(), O(Ja, U({
        key: A,
        modelValue: s(k),
        "onUpdate:modelValue": L[0] || (L[0] = (I) => Ye(k) ? k.value = I : null)
      }, V.props), {
        default: N(() => [
          V.html ? (d(), m("span", {
            key: 0,
            innerHTML: V.html
          }, null, 8, us)) : (d(), m("span", {
            key: 1,
            textContent: q(V.text)
          }, null, 8, ds))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, is));
  }
}), fs = ["value", "disabled"], qt = /* @__PURE__ */ x({
  __name: "BFormSelectOption",
  props: {
    value: null,
    disabled: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "disabled"));
    return (l, n) => (d(), m("option", {
      value: e.value,
      disabled: s(a)
    }, [
      h(l.$slots, "default")
    ], 8, fs));
  }
}), vs = ["label"], Ya = /* @__PURE__ */ x({
  __name: "BFormSelectOptionGroup",
  props: {
    label: null,
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, a = u(
      () => Lt(t.options, "BFormSelectOptionGroup", t)
    );
    return (l, n) => (d(), m("optgroup", { label: e.label }, [
      h(l.$slots, "first"),
      (d(!0), m(le, null, ie(s(a), (i, c) => (d(), O(qt, U({
        key: `option_${c}`,
        value: i.value,
        disabled: i.disabled
      }, l.$attrs, {
        innerHTML: i.html || i.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      h(l.$slots, "default")
    ], 8, vs));
  }
}), ms = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], bs = /* @__PURE__ */ x({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    form: null,
    htmlField: { default: "html" },
    id: null,
    labelField: { default: "label" },
    multiple: { default: !1 },
    name: null,
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { default: !1 },
    required: { default: !1 },
    selectSize: { default: 0 },
    size: null,
    state: { default: void 0 },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = r(o(l, "autofocus")), i = r(o(l, "disabled")), c = r(o(l, "multiple")), f = r(o(l, "plain")), v = r(o(l, "required")), b = r(o(l, "state")), g = W(), B = he(o(l, "id"), "input"), p = () => {
      Oe(() => {
        var V;
        n.value && ((V = g.value) == null || V.focus());
      });
    };
    ge(p), Ot(p);
    const k = u(() => ({
      "form-control": f.value,
      [`form-control-${l.size}`]: l.size && f.value,
      "form-select": !f.value,
      [`form-select-${l.size}`]: l.size && !f.value,
      "is-valid": b.value === !0,
      "is-invalid": b.value === !1
    })), C = u(() => {
      if (l.selectSize || f.value)
        return l.selectSize;
    }), y = u(
      () => ft(l.ariaInvalid, b.value)
    ), S = u(
      () => Lt(l.options, "BFormSelect", l)
    ), $ = u({
      get() {
        return l.modelValue;
      },
      set(V) {
        a("change", V), a("update:modelValue", V), a("input", V);
      }
    });
    return t({
      blur: () => {
        var V;
        i.value || (V = g.value) == null || V.blur();
      },
      focus: () => {
        var V;
        i.value || (V = g.value) == null || V.focus();
      }
    }), (V, A) => Je((d(), m("select", U({
      id: s(B),
      ref_key: "input",
      ref: g
    }, V.$attrs, {
      "onUpdate:modelValue": A[0] || (A[0] = (I) => Ye($) ? $.value = I : null),
      class: s(k),
      name: e.name,
      form: e.form || void 0,
      multiple: s(c) || void 0,
      size: s(C),
      disabled: s(i),
      required: s(v),
      "aria-required": s(v) ? !0 : void 0,
      "aria-invalid": s(y)
    }), [
      h(V.$slots, "first"),
      (d(!0), m(le, null, ie(s(S), (I, M) => (d(), m(le, null, [
        Array.isArray(I.options) ? (d(), O(Ya, {
          key: `option_${M}`,
          label: I.label,
          options: I.options
        }, null, 8, ["label", "options"])) : (d(), O(qt, {
          key: `option2_${M}`,
          value: I.value,
          disabled: I.disabled,
          innerHTML: I.html || I.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 256)),
      h(V.$slots, "default")
    ], 16, ms)), [
      [gl, s($)]
    ]);
  }
}), gs = ["id"], Za = /* @__PURE__ */ x({
  __name: "BFormTag",
  props: {
    id: null,
    title: null,
    disabled: { default: !1 },
    noRemove: { default: !1 },
    pill: { default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "disabled")), n = r(o(a, "noRemove")), i = r(o(a, "pill")), c = He(), f = u(
      () => {
        var B, p, k;
        return (k = ((p = (B = c.default) == null ? void 0 : B.call(c)[0].children) == null ? void 0 : p.toString()) || a.title) != null ? k : "";
      }
    ), v = he(o(a, "id")), b = u(() => `${v.value}taglabel__`), g = u(() => [
      `bg-${a.variant}`,
      {
        "text-dark": ["warning", "info", "light"].includes(a.variant),
        "rounded-pill": i.value,
        disabled: l.value
      }
    ]);
    return (B, p) => (d(), O(J(e.tag), {
      id: s(v),
      title: s(f),
      class: F(["badge b-form-tag d-inline-flex align-items-center mw-100", s(g)]),
      "aria-labelledby": s(b)
    }, {
      default: N(() => [
        H("span", {
          id: s(b),
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          h(B.$slots, "default", {}, () => [
            Y(q(s(f)), 1)
          ])
        ], 8, gs),
        !s(l) && !s(n) ? (d(), O(Ge, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          type: "button",
          "aria-label": e.removeLabel,
          class: "b-form-tag-remove",
          white: !["warning", "info", "light"].includes(e.variant),
          "aria-describedby": s(b),
          "aria-controls": e.id,
          onClick: p[0] || (p[0] = (k) => t("remove", s(f)))
        }, null, 8, ["aria-label", "white", "aria-describedby", "aria-controls"])) : j("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), ps = ["id"], hs = ["id", "for", "aria-live"], ys = ["id", "aria-live"], Bs = ["id"], $s = ["aria-controls"], ks = {
  role: "group",
  class: "d-flex"
}, Ss = ["id", "disabled", "value", "type", "placeholder", "form", "required"], Cs = ["disabled"], ws = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, Ts = {
  key: 0,
  class: "d-block invalid-feedback"
}, Vs = {
  key: 1,
  class: "form-text text-muted"
}, _s = {
  key: 2,
  class: "form-text text-muted"
}, As = ["name", "value"], xs = /* @__PURE__ */ x({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { default: !1 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: null,
    inputClass: null,
    inputId: null,
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: null,
    limit: null,
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: null,
    noAddOnEnter: { default: !1 },
    noOuterFocus: { default: !1 },
    noTagRemove: { default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { default: !1 },
    required: { default: !1 },
    separator: null,
    state: { default: void 0 },
    size: null,
    tagClass: null,
    tagPills: { default: !1 },
    tagRemoveLabel: null,
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "addOnChange")), n = r(o(a, "autofocus")), i = r(o(a, "disabled")), c = r(o(a, "noAddOnEnter")), f = r(o(a, "noOuterFocus")), v = r(o(a, "noTagRemove")), b = r(o(a, "removeOnDelete")), g = r(o(a, "required")), B = r(o(a, "state")), p = r(o(a, "tagPills")), k = W(null), C = he(), y = u(() => a.inputId || `${C.value}input__`);
    ge(() => {
      ae(), a.modelValue.length > 0 && (z.value = !0);
    }), Ot(() => ae()), re(
      () => a.modelValue,
      (X) => {
        S.value = X;
      }
    );
    const S = W(a.modelValue), $ = W(""), z = W(!1), L = W(!1), V = W(""), A = W([]), I = W([]), M = W([]), _ = u(() => ({
      [`form-control-${a.size}`]: a.size !== void 0,
      disabled: i.value,
      focus: L.value,
      "is-invalid": B.value === !1,
      "is-valid": B.value === !0
    })), T = u(() => S.value.includes($.value)), D = u(
      () => $.value === "" ? !1 : !a.tagValidator($.value)
    ), R = u(() => S.value.length === a.limit), ne = u(() => !D.value && !T.value), ae = () => {
      var X;
      n.value && ((X = k.value) == null || X.focus());
    }, K = (X) => {
      if (i.value) {
        X.target.blur();
        return;
      }
      t("focusin", X);
    }, de = (X) => {
      i.value || f.value || (L.value = !0, t("focus", X));
    }, se = (X) => {
      L.value = !1, t("blur", X);
    }, ee = (X) => {
      var G, be;
      const te = typeof X == "string" ? X : X.target.value;
      if (z.value = !1, ((G = a.separator) == null ? void 0 : G.includes(te.charAt(0))) && te.length > 0) {
        k.value && (k.value.value = "");
        return;
      }
      if ($.value = te, (be = a.separator) != null && be.includes(te.charAt(te.length - 1))) {
        ue(te.slice(0, te.length - 1));
        return;
      }
      A.value = a.tagValidator(te) && !T.value ? [te] : [], I.value = a.tagValidator(te) ? [] : [te], M.value = T.value ? [te] : [], t("tag-state", A.value, I.value, M.value);
    }, Z = (X) => {
      l.value && (ee(X), T.value || ue($.value));
    }, $e = (X) => {
      if (X.key === "Enter" && !c.value) {
        ue($.value);
        return;
      }
      (X.key === "Backspace" || X.key === "Delete") && b.value && $.value === "" && z.value && S.value.length > 0 ? ke(S.value[S.value.length - 1]) : z.value = !0;
    }, ue = (X) => {
      var G;
      if (X = (X || $.value).trim(), X === "" || T.value || !a.tagValidator(X) || a.limit && R.value)
        return;
      const te = [...a.modelValue, X];
      $.value = "", z.value = !0, t("update:modelValue", te), t("input", te), (G = k.value) == null || G.focus();
    }, ke = (X) => {
      var G;
      const te = S.value.indexOf((G = X == null ? void 0 : X.toString()) != null ? G : "");
      V.value = S.value.splice(te, 1).toString(), t("update:modelValue", S.value);
    }, _e = u(() => {
      const {
        addButtonText: X,
        addButtonVariant: te,
        duplicateTagText: G,
        inputAttrs: be,
        form: Ae,
        inputType: mt,
        invalidTagText: bt,
        limitTagsText: gt,
        limit: Ne,
        placeholder: w,
        separator: E,
        size: oe,
        tagClass: P,
        tagRemoveLabel: pe,
        tagVariant: ce
      } = a;
      return {
        addButtonText: X,
        addButtonVariant: te,
        addTag: ue,
        disableAddButton: ne,
        disabled: i.value,
        duplicateTagText: G,
        duplicateTags: M,
        form: Ae,
        inputAttrs: {
          ...be,
          disabled: i.value,
          form: Ae,
          id: y,
          value: $
        },
        inputHandlers: {
          input: ee,
          keydown: $e,
          change: Z
        },
        inputId: y,
        inputType: mt,
        invalidTagText: bt,
        invalidTags: I,
        isDuplicate: T,
        isInvalid: D,
        isLimitReached: R,
        limitTagsText: gt,
        limit: Ne,
        noTagRemove: v.value,
        placeholder: w,
        removeTag: ke,
        required: g.value,
        separator: E,
        size: oe,
        state: B.value,
        tagClass: P,
        tagPills: p.value,
        tagRemoveLabel: pe,
        tagVariant: ce,
        tags: S
      };
    });
    return (X, te) => (d(), m("div", {
      id: s(C),
      class: F(["b-form-tags form-control h-auto", s(_)]),
      role: "group",
      tabindex: "-1",
      onFocusin: K,
      onFocusout: te[1] || (te[1] = (G) => t("focusout", G))
    }, [
      H("output", {
        id: `${s(C)}selected_tags__`,
        class: "visually-hidden",
        role: "status",
        for: s(y),
        "aria-live": L.value ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, q(S.value.join(", ")), 9, hs),
      H("div", {
        id: `${s(C)}removed_tags__`,
        role: "status",
        "aria-live": L.value ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + q(e.tagRemovedLabel) + ") " + q(V.value), 9, ys),
      h(X.$slots, "default", ye(Te(s(_e))), () => [
        H("ul", {
          id: `${s(C)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (d(!0), m(le, null, ie(S.value, (G) => (d(), O(Za, {
            key: G,
            class: F(e.tagClass),
            tag: "li",
            variant: e.tagVariant,
            pill: s(p),
            onRemove: ke
          }, {
            default: N(() => [
              Y(q(G), 1)
            ]),
            _: 2
          }, 1032, ["class", "variant", "pill"]))), 128)),
          H("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${s(C)}tag_list__`
          }, [
            H("div", ks, [
              H("input", U({
                id: s(y),
                ref_key: "input",
                ref: k,
                disabled: s(i),
                value: $.value,
                type: e.inputType,
                placeholder: e.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, e.inputAttrs, {
                form: e.form,
                required: s(g),
                onInput: ee,
                onChange: Z,
                onKeydown: $e,
                onFocus: de,
                onBlur: se
              }), null, 16, Ss),
              s(ne) ? (d(), m("button", {
                key: 0,
                type: "button",
                class: F(["btn b-form-tags-button py-0", [
                  `btn-${e.addButtonVariant}`,
                  {
                    "disabled invisible": $.value.length === 0
                  },
                  e.inputClass
                ]]),
                style: { "font-size": "90%" },
                disabled: s(i) || $.value.length === 0 || s(R),
                onClick: te[0] || (te[0] = (G) => ue($.value))
              }, [
                h(X.$slots, "add-button-text", {}, () => [
                  Y(q(e.addButtonText), 1)
                ])
              ], 10, Cs)) : j("", !0)
            ])
          ], 8, $s)
        ], 8, Bs),
        H("div", ws, [
          s(D) ? (d(), m("div", Ts, q(e.invalidTagText) + ": " + q($.value), 1)) : j("", !0),
          s(T) ? (d(), m("small", Vs, q(e.duplicateTagText) + ": " + q($.value), 1)) : j("", !0),
          S.value.length === e.limit ? (d(), m("small", _s, "Tag limit reached")) : j("", !0)
        ])
      ]),
      e.name ? (d(!0), m(le, { key: 0 }, ie(S.value, (G) => (d(), m("input", {
        key: G,
        type: "hidden",
        name: e.name,
        value: G
      }, null, 8, As))), 128)) : j("", !0)
    ], 42, ps));
  }
}), Is = x({
  props: {
    ...Va,
    noResize: { type: [Boolean, String], default: !1 },
    rows: { type: [String, Number], required: !1, default: 2 },
    wrap: { type: String, default: "soft" }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const a = r(o(e, "noResize")), l = u(() => ({
      "form-control": !e.plaintext,
      "form-control-plaintext": e.plaintext,
      [`form-control-${e.size}`]: !!e.size,
      "is-valid": e.state === !0,
      "is-invalid": e.state === !1
    })), n = u(
      () => a.value ? { resize: "none" } : void 0
    ), { input: i, computedId: c, computedAriaInvalid: f, onInput: v, onChange: b, onBlur: g, focus: B, blur: p } = _a(e, t);
    return {
      input: i,
      computedId: c,
      computedAriaInvalid: f,
      onInput: v,
      onChange: b,
      onBlur: g,
      focus: B,
      blur: p,
      classes: l,
      computedStyles: n
    };
  }
}), Fs = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"];
function Os(e, t, a, l, n, i) {
  return d(), m("textarea", U({
    id: e.computedId,
    ref: "input",
    class: e.classes,
    name: e.name || void 0,
    form: e.form || void 0,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid,
    rows: e.rows,
    style: e.computedStyles,
    wrap: e.wrap || void 0
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (c) => e.onInput(c)),
    onChange: t[1] || (t[1] = (c) => e.onChange(c)),
    onBlur: t[2] || (t[2] = (c) => e.onBlur(c))
  }), null, 16, Fs);
}
const zs = /* @__PURE__ */ Be(Is, [["render", Os]]), Ps = {
  key: 0,
  class: "input-group-text"
}, Ns = ["innerHTML"], Ls = { key: 1 }, Es = {
  key: 0,
  class: "input-group-text"
}, Hs = ["innerHTML"], Ds = { key: 1 }, qs = /* @__PURE__ */ x({
  __name: "BInputGroup",
  props: {
    append: null,
    appendHtml: null,
    id: null,
    prepend: null,
    prependHtml: null,
    size: null,
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = u(() => ({
      "input-group-sm": t.size === "sm",
      "input-group-lg": t.size === "lg"
    })), l = u(() => !!t.append || !!t.appendHtml), n = u(() => !!t.prepend || !!t.prependHtml);
    return (i, c) => (d(), O(J(e.tag), {
      id: e.id,
      class: F(["input-group", s(a)]),
      role: "group"
    }, {
      default: N(() => [
        h(i.$slots, "prepend", {}, () => [
          s(n) ? (d(), m("span", Ps, [
            e.prependHtml ? (d(), m("span", {
              key: 0,
              innerHTML: e.prependHtml
            }, null, 8, Ns)) : (d(), m("span", Ls, q(e.prepend), 1))
          ])) : j("", !0)
        ]),
        h(i.$slots, "default"),
        h(i.$slots, "append", {}, () => [
          s(l) ? (d(), m("span", Es, [
            e.appendHtml ? (d(), m("span", {
              key: 0,
              innerHTML: e.appendHtml
            }, null, 8, Hs)) : (d(), m("span", Ds, q(e.append), 1))
          ])) : j("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Qa = /* @__PURE__ */ x({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: null
  },
  setup(e) {
    return (t, a) => (d(), O(J(e.tag), { class: "input-group-text" }, {
      default: N(() => [
        h(t.$slots, "default", {}, () => [
          Y(q(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Rt = /* @__PURE__ */ x({
  __name: "BInputGroupAddon",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "isText"));
    return (l, n) => s(a) ? (d(), O(Qa, { key: 0 }, {
      default: N(() => [
        h(l.$slots, "default")
      ]),
      _: 3
    })) : h(l.$slots, "default", { key: 1 });
  }
}), Rs = /* @__PURE__ */ x({
  __name: "BInputGroupAppend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (d(), O(Rt, { "is-text": e.isText }, {
      default: N(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), js = /* @__PURE__ */ x({
  __name: "BInputGroupPrepend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (d(), O(Rt, { "is-text": e.isText }, {
      default: N(() => [
        h(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), el = Symbol(), Ms = /* @__PURE__ */ x({
  __name: "BListGroup",
  props: {
    flush: { default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(o(t, "flush")), l = r(o(t, "numbered")), n = u(() => {
      const c = a.value ? !1 : t.horizontal;
      return {
        "list-group-flush": a.value,
        "list-group-horizontal": c === !0,
        [`list-group-horizontal-${c}`]: typeof c == "string",
        "list-group-numbered": l.value
      };
    }), i = u(() => l.value === !0 ? "ol" : t.tag);
    return Me(el, {
      numbered: l.value
    }), (c, f) => (d(), O(J(s(i)), {
      class: F(["list-group", s(n)])
    }, {
      default: N(() => [
        h(c.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Gs = /* @__PURE__ */ x({
  __name: "BListGroupItem",
  props: {
    action: { default: !1 },
    active: { default: !1 },
    button: { default: !1 },
    disabled: { default: !1 },
    href: null,
    tag: { default: "div" },
    target: { default: "_self" },
    to: null,
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "action")), l = r(o(t, "active")), n = r(o(t, "button")), i = r(o(t, "disabled")), c = ra(), f = Fe(el, null), v = u(() => !n.value && (!!t.href || !!t.to)), b = u(
      () => f != null && f.numbered ? "li" : n.value ? "button" : v.value ? Ce : t.tag
    ), g = u(() => {
      const p = a.value || v.value || n.value || ["a", "router-link", "button", "b-link"].includes(t.tag);
      return {
        [`list-group-item-${t.variant}`]: t.variant !== void 0,
        "list-group-item-action": p,
        active: l.value,
        disabled: i.value
      };
    }), B = u(() => {
      const p = {};
      return n.value && ((!c || !c.type) && (p.type = "button"), i.value && (p.disabled = !0)), p;
    });
    return (p, k) => (d(), O(J(s(b)), U({
      class: ["list-group-item", s(g)],
      "aria-current": s(l) ? !0 : null,
      "aria-disabled": s(i) ? !0 : null,
      target: s(v) ? e.target : null,
      href: s(n) ? null : e.href,
      to: s(n) ? null : e.to
    }, s(B)), {
      default: N(() => [
        h(p.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), Us = ["id"], Ws = {
  inheritAttrs: !1
}, Xs = /* @__PURE__ */ x({
  ...Ws,
  __name: "BModal",
  props: {
    bodyBgVariant: null,
    bodyClass: null,
    bodyTextVariant: null,
    busy: { default: !1 },
    lazy: { default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { default: !1 },
    contentClass: null,
    dialogClass: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerTextVariant: null,
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerCloseLabel: { default: "Close" },
    headerCloseWhite: { default: !1 },
    headerTextVariant: null,
    hideBackdrop: { default: !1 },
    hideFooter: { default: !1 },
    hideHeader: { default: !1 },
    hideHeaderClose: { default: !1 },
    id: null,
    modalClass: null,
    modelValue: { default: !1 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    noFade: { default: !1 },
    noFocus: { default: !1 },
    okDisabled: { default: !1 },
    okOnly: { default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { default: !1 },
    show: { default: !1 },
    size: null,
    title: null,
    titleClass: null,
    titleSrOnly: { default: !1 },
    titleTag: { default: "h5" }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "ok", "cancel"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "busy")), n = r(o(a, "lazy")), i = r(o(a, "cancelDisabled")), c = r(o(a, "centered")), f = r(o(a, "headerCloseWhite")), v = r(o(a, "hideBackdrop")), b = r(o(a, "hideFooter")), g = r(o(a, "hideHeader")), B = r(o(a, "hideHeaderClose")), p = r(o(a, "modelValue")), k = r(o(a, "noCloseOnBackdrop")), C = r(o(a, "noCloseOnEsc")), y = r(o(a, "noFade")), S = r(o(a, "noFocus")), $ = r(o(a, "okDisabled")), z = r(o(a, "okOnly")), L = r(o(a, "scrollable")), V = r(o(a, "show")), A = r(o(a, "titleSrOnly")), I = W(!1), M = he(o(a, "id"), "modal"), _ = W(), T = W(), D = u(() => [
      {
        fade: !y.value,
        show: V.value
      },
      a.modalClass
    ]), R = u(() => [
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== void 0,
        "modal-dialog-centered": c.value,
        "modal-dialog-scrollable": L.value
      },
      a.dialogClass
    ]), ne = u(() => [
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant
      },
      a.bodyClass
    ]), ae = u(() => [
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant
      },
      a.headerClass
    ]), K = u(() => [
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant
      },
      a.footerClass
    ]), de = u(() => [
      {
        ["visually-hidden"]: A.value
      },
      a.titleClass
    ]), se = u(() => i.value || l.value), ee = u(() => $.value || l.value);
    ve(_, "shown.bs.modal", (G) => Z(G)), ve(_, "hidden.bs.modal", (G) => $e(G)), ve(_, "show.bs.modal", (G) => ue(G)), ve(_, "hide.bs.modal", (G) => ke(G));
    const Z = (G) => {
      t("shown", G), n.value === !0 && (I.value = !0), p.value === !1 && t("update:modelValue", !0), G.target.focus();
    }, $e = (G) => {
      t("hidden", G), n.value === !0 && (I.value = !1), p.value === !0 && t("update:modelValue", !1);
      const be = document.querySelector(".modal");
      be && be.focus();
    }, ue = (G) => {
      t("show", G);
    }, ke = (G) => {
      t("hide", G);
    }, _e = () => {
      p.value && t("update:modelValue", !0), te().show();
    }, X = () => {
      p.value && t("update:modelValue", !1), te().hide();
    }, te = () => (T.value !== void 0 || (T.value = new kl(_.value, {
      backdrop: !1,
      keyboard: !C.value,
      focus: !S.value
    })), T.value);
    return ge(() => {
      p.value && te().show();
    }), rt(() => {
      var G;
      (G = T.value) == null || G.dispose(), T.value = void 0;
    }), re(
      () => a.noCloseOnBackdrop,
      (G) => {
        te()._config.backdrop = a.hideBackdrop ? !1 : G ? "static" : !a.hideBackdrop;
      }
    ), re(
      () => a.noCloseOnEsc,
      (G) => {
        te()._config.keyboard = !G;
      }
    ), re(
      () => p.value,
      (G) => {
        Oe(() => {
          G ? _e() : X();
        });
      }
    ), (G, be) => (d(), O(pl, { to: "body" }, [
      H("div", U({
        id: s(M),
        ref_key: "element",
        ref: _,
        class: ["modal", s(D)],
        tabindex: "-1"
      }, G.$attrs), [
        H("div", {
          class: F(["modal-dialog", s(R)])
        }, [
          !s(n) || s(n) && I.value || s(n) && s(p) === !0 ? (d(), m("div", {
            key: 0,
            class: F(["modal-content", e.contentClass])
          }, [
            s(g) ? j("", !0) : (d(), m("div", {
              key: 0,
              class: F(["modal-header", s(ae)])
            }, [
              h(G.$slots, "header", {}, () => [
                (d(), O(J(e.titleTag), {
                  class: F(["modal-title", s(de)])
                }, {
                  default: N(() => [
                    h(G.$slots, "title", {}, () => [
                      Y(q(e.title), 1)
                    ], !0)
                  ]),
                  _: 3
                }, 8, ["class"])),
                s(B) ? j("", !0) : (d(), m(le, { key: 0 }, [
                  G.$slots["header-close"] ? (d(), m("button", {
                    key: 0,
                    type: "button",
                    "data-bs-dismiss": "modal",
                    onClick: be[0] || (be[0] = (Ae) => X())
                  }, [
                    h(G.$slots, "header-close", {}, void 0, !0)
                  ])) : (d(), O(Ge, {
                    key: 1,
                    type: "button",
                    "aria-label": e.headerCloseLabel,
                    "data-bs-dismiss": "modal",
                    white: s(f),
                    onClick: be[1] || (be[1] = (Ae) => X())
                  }, null, 8, ["aria-label", "white"]))
                ], 64))
              ], !0)
            ], 2)),
            H("div", {
              class: F(["modal-body", s(ne)])
            }, [
              h(G.$slots, "default", {}, void 0, !0)
            ], 2),
            s(b) ? j("", !0) : (d(), m("div", {
              key: 1,
              class: F(["modal-footer", s(K)])
            }, [
              h(G.$slots, "footer", {}, () => [
                s(z) ? j("", !0) : (d(), O(Ke, {
                  key: 0,
                  type: "button",
                  class: "btn",
                  disabled: s(se),
                  size: e.buttonSize,
                  variant: e.cancelVariant,
                  onClick: be[2] || (be[2] = (Ae) => (X(), t("cancel")))
                }, {
                  default: N(() => [
                    Y(q(e.cancelTitle), 1)
                  ]),
                  _: 1
                }, 8, ["disabled", "size", "variant"])),
                me(Ke, {
                  type: "button",
                  class: "btn",
                  disabled: s(ee),
                  size: e.buttonSize,
                  variant: e.okVariant,
                  onClick: be[3] || (be[3] = (Ae) => (X(), t("ok")))
                }, {
                  default: N(() => [
                    Y(q(e.okTitle), 1)
                  ]),
                  _: 1
                }, 8, ["disabled", "size", "variant"])
              ], !0)
            ], 2))
          ], 2)) : j("", !0)
        ], 2),
        s(v) === !1 ? (d(), m("div", {
          key: 0,
          class: "modal-backdrop fade show",
          onClick: be[4] || (be[4] = it((Ae) => s(k) === !1 && X(), ["prevent"]))
        })) : j("", !0)
      ], 16, Us)
    ]));
  }
});
const Ks = /* @__PURE__ */ Be(Xs, [["__scopeId", "data-v-f7e6d64f"]]), Js = /* @__PURE__ */ x({
  __name: "BNav",
  props: {
    align: null,
    cardHeader: { default: !1 },
    fill: { default: !1 },
    justified: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tabs: { default: !1 },
    tag: { default: "ul" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "cardHeader")), l = r(o(t, "fill")), n = r(o(t, "justified")), i = r(o(t, "pills")), c = r(o(t, "small")), f = r(o(t, "tabs")), v = r(o(t, "vertical")), b = u(() => ({
      "nav-tabs": f.value,
      "nav-pills": i.value && !f.value,
      "card-header-tabs": !v.value && a.value && f.value,
      "card-header-pills": !v.value && a.value && i.value && !f.value,
      "flex-column": v.value,
      "nav-fill": !v.value && l.value,
      "nav-justified": !v.value && n.value,
      [`justify-content-${t.align}`]: !v.value && t.align !== void 0,
      small: c.value
    }));
    return (g, B) => (d(), O(J(e.tag), {
      class: F(["nav", s(b)])
    }, {
      default: N(() => [
        h(g.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Ys = /* @__PURE__ */ x({
  __name: "BNavForm",
  props: {
    role: null,
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = (i) => t("submit", i), n = u(() => ({
      floating: a.floating,
      role: a.role,
      id: a.id,
      novalidate: a.novalidate,
      validated: a.validated
    }));
    return (i, c) => (d(), O(Wa, U(s(n), {
      class: "d-flex",
      onSubmit: it(l, ["prevent"])
    }), {
      default: N(() => [
        h(i.$slots, "default")
      ]),
      _: 3
    }, 16, ["onSubmit"]));
  }
}), Zs = x({
  components: { BLink: Ce },
  props: {
    ...ut(De, ["event", "routerTag"])
  },
  setup(e) {
    return { disabledBoolean: r(o(e, "disabled")) };
  }
}), Qs = { class: "nav-item" };
function er(e, t, a, l, n, i) {
  const c = zt("b-link");
  return d(), m("li", Qs, [
    me(c, U({ class: "nav-link" }, e.$props, {
      "active-class": "active",
      tabindex: e.disabledBoolean ? -1 : void 0,
      "aria-disabled": e.disabledBoolean ? !0 : void 0
    }), {
      default: N(() => [
        h(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["tabindex", "aria-disabled"])
  ]);
}
const tr = /* @__PURE__ */ Be(Zs, [["render", er]]), ar = { class: "nav-item dropdown" }, lr = /* @__PURE__ */ x({
  __name: "BNavItemDropdown",
  props: {
    id: null,
    text: null,
    toggleClass: null,
    size: null,
    offset: null,
    autoClose: { type: [Boolean, String], default: !0 },
    dark: { type: Boolean, default: !1 },
    dropleft: { type: Boolean, default: !1 },
    dropright: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    right: { type: Boolean, default: !1 },
    left: { type: [Boolean, String], default: !1 },
    split: { type: Boolean, default: !1 },
    splitVariant: null,
    noCaret: { type: Boolean, default: !1 },
    variant: { default: "link" }
  },
  setup(e) {
    return (t, a) => (d(), m("li", ar, [
      me(Ua, U(t.$props, { "is-nav": "" }), ia({ _: 2 }, [
        ie(t.$slots, (l, n) => ({
          name: n,
          fn: N((i) => [
            h(t.$slots, n, ye(Te(i || {})))
          ])
        }))
      ]), 1040)
    ]));
  }
}), nr = { class: "navbar-text" }, or = /* @__PURE__ */ x({
  __name: "BNavText",
  props: {
    text: null
  },
  setup(e) {
    return (t, a) => (d(), m("li", nr, [
      h(t.$slots, "default", {}, () => [
        Y(q(e.text), 1)
      ])
    ]));
  }
}), sr = /* @__PURE__ */ x({
  __name: "BNavbar",
  props: {
    fixed: null,
    print: { default: !1 },
    sticky: null,
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    dark: { default: !1 },
    variant: null,
    container: { type: [String, Boolean], default: "fluid" }
  },
  setup(e) {
    const t = e, a = r(o(t, "print")), l = r(o(t, "dark")), n = u(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), i = u(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), c = u(
      () => t.container === !1 ? void 0 : t.container === !0 ? "container" : `container-${t.container}`
    ), f = u(() => ({
      "d-print": a.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      "navbar-dark": l.value,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${i.value}`]: i.value !== void 0
    }));
    return (v, b) => (d(), O(J(e.tag), {
      class: F(["navbar", s(f)]),
      role: s(n)
    }, {
      default: N(() => [
        e.container !== !1 ? (d(), m("div", {
          key: 0,
          class: F(s(c))
        }, [
          h(v.$slots, "default")
        ], 2)) : h(v.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), la = ut(De, ["event", "routerTag"]), rr = x({
  components: {
    BLink: Ce
  },
  props: {
    tag: { type: String, default: "div" },
    ...la
  },
  setup(e) {
    const t = u(() => Xe(e)), a = u(() => t.value ? Ce : e.tag);
    return {
      props: t.value ? Nt(e, la) : {},
      computedTag: a
    };
  }
});
function ir(e, t, a, l, n, i) {
  return d(), O(J(e.computedTag), U({ class: "navbar-brand" }, e.props), {
    default: N(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 16);
}
const ur = /* @__PURE__ */ Be(rr, [["render", ir]]), dr = /* @__PURE__ */ x({
  __name: "BNavbarNav",
  props: {
    align: null,
    fill: { default: !1 },
    justified: { default: !1 },
    small: { default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, a = r(o(t, "fill")), l = r(o(t, "justified")), n = r(o(t, "small")), i = u(() => ({
      "nav-fill": a.value,
      "nav-justified": l.value,
      [`justify-content-${t.align}`]: t.align !== void 0,
      small: n.value
    }));
    return (c, f) => (d(), m("ul", {
      class: F(["navbar-nav", s(i)])
    }, [
      h(c.$slots, "default")
    ], 2));
  }
}), cr = /* @__PURE__ */ H("span", { class: "navbar-toggler-icon" }, null, -1), fr = /* @__PURE__ */ x({
  __name: "BNavbarToggle",
  props: {
    disabled: { default: !1 },
    label: { default: "Toggle navigation" },
    target: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "disabled")), n = u(() => ({
      disabled: l.value,
      "aria-label": a.label
    })), i = u(() => ({
      disabled: l.value
    })), c = (f) => {
      l.value || t("click", f);
    };
    return (f, v) => Je((d(), m("button", U({
      class: ["navbar-toggler", s(i)],
      type: "button"
    }, s(n), { onClick: c }), [
      h(f.$slots, "default", {}, () => [
        cr
      ])
    ], 16)), [
      [s(Et), s(l) ? void 0 : e.target]
    ]);
  }
}), vr = ["data-bs-backdrop", "data-bs-scroll"], mr = {
  key: 0,
  class: "offcanvas-header"
}, br = {
  id: "offcanvasLabel",
  class: "offcanvas-title"
}, gr = { class: "offcanvas-body" }, pr = { key: 1 }, hr = /* @__PURE__ */ x({
  __name: "BOffcanvas",
  props: {
    dismissLabel: { default: "Close" },
    modelValue: { default: !1 },
    bodyScrolling: { default: !1 },
    backdrop: { default: !0 },
    placement: { default: "start" },
    title: null,
    noHeaderClose: { default: !1 },
    noHeader: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "modelValue")), n = r(o(a, "bodyScrolling")), i = r(o(a, "backdrop")), c = r(o(a, "noHeaderClose")), f = r(o(a, "noHeader")), v = W(), b = W();
    ve(v, "shown.bs.offcanvas", () => t("shown")), ve(v, "hidden.bs.offcanvas", () => t("hidden"));
    const g = () => {
      t("show"), t("update:modelValue", !0);
    }, B = () => {
      t("hide"), t("update:modelValue", !1);
    };
    ve(v, "show.bs.offcanvas", () => {
      g();
    }), ve(v, "hide.bs.offcanvas", () => {
      B();
    }), ge(() => {
      var k;
      b.value = new Sl(v.value), l.value && ((k = b.value) == null || k.show(v.value));
    });
    const p = u(() => ({
      [`offcanvas-${a.placement}`]: !!a.placement
    }));
    return re(
      () => l.value,
      (k) => {
        var C, y;
        k ? (C = b.value) == null || C.show(v.value) : (y = b.value) == null || y.hide();
      }
    ), (k, C) => (d(), m("div", {
      ref_key: "element",
      ref: v,
      class: F(["offcanvas", s(p)]),
      tabindex: "-1",
      "aria-labelledby": "offcanvasLabel",
      "data-bs-backdrop": s(i),
      "data-bs-scroll": s(n)
    }, [
      s(f) ? j("", !0) : (d(), m("div", mr, [
        h(k.$slots, "header", ye(Te({ visible: e.modelValue, placement: e.placement, hide: B })), () => [
          H("h5", br, [
            h(k.$slots, "title", {}, () => [
              Y(q(e.title), 1)
            ])
          ]),
          s(c) ? j("", !0) : (d(), O(Ge, {
            key: 0,
            type: "button",
            class: "text-reset",
            "data-bs-dismiss": "offcanvas",
            "aria-label": e.dismissLabel
          }, null, 8, ["aria-label"]))
        ])
      ])),
      H("div", gr, [
        h(k.$slots, "default")
      ]),
      k.$slots.footer ? (d(), m("div", pr, [
        h(k.$slots, "footer", ye(Te({ visible: e.modelValue, placement: e.placement, hide: B })))
      ])) : j("", !0)
    ], 10, vr));
  }
}), kt = { top: 0, left: 0, bottom: 0, right: 0 }, yr = "default", Br = "overlay", $r = x({
  components: { BTransition: st },
  props: {
    bgColor: { type: String, required: !1 },
    blur: { type: String, default: "2px" },
    fixed: { type: [Boolean, String], default: !1 },
    noCenter: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noWrap: { type: [Boolean, String], default: !1 },
    opacity: {
      type: [Number, String],
      default: 0.85,
      validator: (e) => {
        const t = Pt(e, 0);
        return t >= 0 && t <= 1;
      }
    },
    overlayTag: { type: String, default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { type: [Boolean, String], default: !1 },
    spinnerSmall: { type: [Boolean, String], default: !1 },
    spinnerType: { type: String, default: "border" },
    spinnerVariant: { type: String, required: !1 },
    variant: { type: String, default: "light" },
    wrapTag: { type: String, default: "div" },
    zIndex: { type: [Number, String], default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { slots: t, emit: a }) {
    const l = r(o(e, "fixed")), n = r(o(e, "noCenter")), i = r(o(e, "noFade")), c = r(o(e, "noWrap")), f = r(o(e, "show")), v = r(o(e, "spinnerSmall")), b = u(
      () => e.rounded === !0 || e.rounded === "" ? "rounded" : e.rounded ? `rounded-${e.rounded}` : ""
    ), g = u(
      () => e.variant && !e.bgColor ? `bg-${e.variant}` : ""
    ), B = u(() => ({
      spinnerType: e.spinnerType || null,
      spinnerVariant: e.spinnerVariant || null,
      spinnerSmall: v.value
    }));
    return () => {
      const p = (S) => Q(zt("BSpinner"), {
        type: S.spinnerType,
        variant: S.spinnerVariant,
        small: v.value
      });
      let k = "";
      if (f.value) {
        const S = Q("div", {
          class: ["position-absolute", g.value, b.value],
          style: {
            ...kt,
            opacity: e.opacity,
            backgroundColor: e.bgColor || null,
            backdropFilter: e.blur ? `blur(${e.blur})` : null
          }
        }), $ = Q(
          "div",
          {
            class: "position-absolute",
            style: n.value ? { ...kt } : { top: "50%", left: "50%", transform: "translateX(-50%) translateY(-50%)" }
          },
          Se(Br, B.value, t) || p(B.value) || ""
        );
        k = Q(
          e.overlayTag,
          {
            class: [
              "b-overlay",
              {
                "position-absolute": !c.value || c.value && !l.value,
                "position-fixed": c.value && l.value
              }
            ],
            style: {
              ...kt,
              zIndex: e.zIndex || 10
            },
            onClick: (z) => a("click", z),
            key: "overlay"
          },
          [S, $]
        );
      }
      const C = () => Q(
        st,
        {
          noFade: i.value,
          transProps: { enterToClass: "show" },
          name: "fade",
          onAfterEnter: () => a("shown"),
          onAfterLeave: () => a("hidden")
        },
        { default: () => k }
      );
      return c.value ? C() : Q(
        e.wrapTag,
        {
          class: ["b-overlay-wrap position-relative"],
          "aria-busy": f.value ? "true" : null
        },
        [Q("span", Se(yr, {}, t)), C()]
      );
    };
  }
}), kr = 5, tl = 20, al = 0, Ve = 3, Sr = "ellipsis-text", Cr = "first-text", wr = "last-text", Tr = "next-text", Vr = "page", _r = "prev-text", na = (e) => Math.max(je(e) || tl, 1), oa = (e) => Math.max(je(e) || al, 0), Ar = (e, t) => {
  const a = je(e) || 1;
  return a > t ? t : a < 1 ? 1 : a;
}, xr = x({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "\u2026" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "\xAB" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "\xBB" },
    limit: { type: Number, default: kr },
    modelValue: { type: Number, default: 1 },
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "\u203A" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: tl },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "\u2039" },
    size: { type: String, required: !1 },
    totalRows: { type: Number, default: al }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: a }) {
    const l = r(o(e, "disabled")), n = r(o(e, "firstNumber")), i = r(o(e, "hideEllipsis")), c = r(o(e, "hideGotoEndButtons")), f = r(o(e, "lastNumber")), v = r(o(e, "pills")), b = Cl(o(e, "align")), g = u(
      () => Math.ceil(oa(e.totalRows) / na(e.perPage))
    ), B = u(() => {
      let V;
      return g.value - e.modelValue + 2 < e.limit && e.limit > Ve ? V = g.value - k.value + 1 : V = e.modelValue - Math.floor(k.value / 2), V < 1 ? V = 1 : V > g.value - k.value && (V = g.value - k.value + 1), e.limit <= Ve && f.value && g.value === V + k.value - 1 && (V = Math.max(V - 1, 1)), V;
    }), p = u(() => {
      const V = g.value - e.modelValue;
      let A = !1;
      return V + 2 < e.limit && e.limit > Ve ? e.limit > Ve && (A = !0) : e.limit > Ve && (A = !!(!i.value || n.value)), B.value <= 1 && (A = !1), A && n.value && B.value < 4 && (A = !1), A;
    }), k = u(() => {
      let V = e.limit;
      return g.value <= e.limit ? V = g.value : e.modelValue < e.limit - 1 && e.limit > Ve ? ((!i.value || f.value) && (V = e.limit - (n.value ? 0 : 1)), V = Math.min(V, e.limit)) : g.value - e.modelValue + 2 < e.limit && e.limit > Ve ? (!i.value || n.value) && (V = e.limit - (f.value ? 0 : 1)) : e.limit > Ve && (V = e.limit - (i.value ? 0 : 2)), V;
    }), C = u(() => {
      const V = g.value - k.value;
      let A = !1;
      e.modelValue < e.limit - 1 && e.limit > Ve ? (!i.value || f.value) && (A = !0) : e.limit > Ve && (A = !!(!i.value || f.value)), B.value > V && (A = !1);
      const I = B.value + k.value - 1;
      return A && f.value && I > g.value - 3 && (A = !1), A;
    }), y = Ie({
      pageSize: na(e.perPage),
      totalRows: oa(e.totalRows),
      numberOfPages: g.value
    }), S = (V, A) => {
      if (A === e.modelValue)
        return;
      const { target: I } = V, M = new dt("page-click", {
        cancelable: !0,
        vueTarget: this,
        target: I
      });
      t("page-click", M, A), !M.defaultPrevented && t("update:modelValue", A);
    }, $ = u(() => e.size ? `pagination-${e.size}` : ""), z = u(() => v.value ? "b-pagination-pills" : "");
    re(
      () => e.modelValue,
      (V) => {
        const A = Ar(V, g.value);
        A !== e.modelValue && t("update:modelValue", A);
      }
    ), re(y, (V, A) => {
      V != null && (A.pageSize !== V.pageSize && A.totalRows === V.totalRows || A.numberOfPages !== V.numberOfPages && e.modelValue > A.numberOfPages) && t("update:modelValue", 1);
    });
    const L = u(() => {
      const V = [];
      for (let A = 0; A < k.value; A++)
        V.push({ number: B.value + A, classes: null });
      return V;
    });
    return () => {
      const V = [], A = L.value.map((K) => K.number), I = (K) => K === e.modelValue, M = e.modelValue < 1, _ = e.align === "fill", T = (K, de, se, ee, Z, $e) => {
        const ue = l.value || I($e) || M || K < 1 || K > g.value, ke = K < 1 ? 1 : K > g.value ? g.value : K, _e = { disabled: ue, page: ke, index: ke - 1 }, X = Se(se, _e, a) || ee || "";
        return Q(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: ue,
                "flex-fill": _,
                "d-flex": _ && !ue
              },
              Z
            ]
          },
          Q(
            ue ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !ue && _ }],
              "aria-label": de,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": ue ? "true" : null,
              role: "menuitem",
              type: ue ? null : "button",
              tabindex: ue ? null : "-1",
              onClick: (te) => {
                ue || S(te, ke);
              }
            },
            X
          )
        );
      }, D = (K) => Q(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            _ ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${K ? "last" : "first"}`
        },
        [
          Q(
            "span",
            { class: ["page-link"] },
            Se(Sr, {}, a) || e.ellipsisText || "..."
          )
        ]
      ), R = (K, de) => {
        const se = I(K.number) && !M, ee = l.value ? null : se || M && de === 0 ? "0" : "-1", Z = {
          active: se,
          disabled: l.value,
          page: K.number,
          index: K.number - 1,
          content: K.number
        }, $e = Se(Vr, Z, a) || K.number, ue = Q(
          l.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !l.value && _ }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": l.value ? "true" : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${K.number}` : null,
            role: "menuitemradio",
            type: l.value ? null : "button",
            tabindex: ee,
            onClick: (ke) => {
              l.value || S(ke, K.number);
            }
          },
          $e
        );
        return Q(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: l.value,
                active: se,
                "flex-fill": _,
                "d-flex": _ && !l.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${K.number}`
          },
          ue
        );
      };
      if (!c.value && !n.value) {
        const K = T(
          1,
          e.labelFirstPage,
          Cr,
          e.firstText,
          e.firstClass,
          1
        );
        V.push(K);
      }
      const ne = T(
        e.modelValue - 1,
        e.labelFirstPage,
        _r,
        e.prevText,
        e.prevClass,
        1
      );
      V.push(ne), n.value && A[0] !== 1 && V.push(R({ number: 1 }, 0)), p.value && V.push(D(!1)), L.value.forEach((K, de) => {
        const se = p.value && n.value && A[0] !== 1 ? 1 : 0;
        V.push(R(K, de + se));
      }), C.value && V.push(D(!0)), f.value && A[A.length - 1] !== g.value && V.push(R({ number: g.value }, -1));
      const ae = T(
        e.modelValue + 1,
        e.labelNextPage,
        Tr,
        e.nextText,
        e.nextClass,
        g.value
      );
      if (V.push(ae), !f.value && !c.value) {
        const K = T(
          g.value,
          e.labelLastPage,
          wr,
          e.lastText,
          e.lastClass,
          g.value
        );
        V.push(K);
      }
      return Q(
        "ul",
        {
          class: ["pagination", $.value, b.value, z.value],
          role: "menubar",
          "aria-disabled": l.value,
          "aria-label": e.ariaLabel || null
        },
        V
      );
    };
  }
}), we = /* @__PURE__ */ x({
  __name: "BPlaceholder",
  props: {
    tag: { default: "span" },
    width: null,
    cols: null,
    variant: null,
    size: null,
    animation: null
  },
  setup(e) {
    const t = e, a = u(
      () => t.width === void 0 ? void 0 : typeof t.width == "number" ? t.width.toString() : t.width.includes("%") ? t.width.replaceAll("%", "") : t.width
    ), l = u(
      () => t.cols === void 0 ? void 0 : typeof t.cols == "number" ? t.cols.toString() : t.cols
    ), n = u(() => ({
      [`col-${l.value}`]: l.value !== void 0 && a.value === void 0,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`placeholder-${t.size}`]: t.size !== void 0,
      [`placeholder-${t.animation}`]: t.animation !== void 0
    })), i = u(
      () => a.value === void 0 ? void 0 : `width: ${a.value}%;`
    );
    return (c, f) => (d(), O(J(e.tag), {
      class: F(["placeholder", s(n)]),
      style: ze(s(i))
    }, null, 8, ["class", "style"]));
  }
}), ll = /* @__PURE__ */ x({
  __name: "BPlaceholderButton",
  props: {
    tag: { default: "div" },
    width: null,
    cols: null,
    variant: { default: "primary" },
    animation: null
  },
  setup(e) {
    const t = e, a = u(() => ["btn", `btn-${t.variant}`, "disabled"]), l = u(() => ({
      animation: t.animation,
      width: t.width,
      cols: t.cols,
      tag: t.tag
    }));
    return (n, i) => (d(), O(we, U({ class: s(a) }, s(l)), null, 16, ["class"]));
  }
}), Ir = /* @__PURE__ */ x({
  __name: "BPlaceholderCard",
  props: {
    noHeader: { default: !1 },
    headerWidth: { default: 100 },
    headerVariant: null,
    headerAnimation: null,
    headerSize: null,
    noFooter: { default: !1 },
    footerWidth: { default: 100 },
    footerVariant: null,
    footerAnimation: null,
    footerSize: null,
    animation: null,
    size: null,
    variant: null,
    noButton: { default: !1 },
    imgBottom: { default: !1 },
    imgSrc: null,
    imgBlankColor: { default: "#868e96" },
    imgHeight: { default: 100 },
    noImg: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "noButton")), l = r(o(t, "noHeader")), n = r(o(t, "noFooter")), i = r(o(t, "noImg")), c = r(o(t, "imgBottom")), f = u(() => ({
      width: t.headerWidth,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      size: t.headerSize
    })), v = u(() => ({
      width: t.footerWidth,
      animation: t.footerAnimation,
      size: a.value ? t.footerSize : void 0,
      variant: t.footerVariant
    })), b = u(() => ({
      blank: !t.imgSrc,
      blankColor: t.imgBlankColor,
      height: t.imgSrc ? void 0 : t.imgHeight,
      src: t.imgSrc,
      top: !c.value,
      bottom: c.value
    }));
    return (g, B) => (d(), O(Da, { "img-bottom": s(c) }, ia({
      default: N(() => [
        h(g.$slots, "default", {}, () => [
          me(we, { cols: "7" }),
          me(we, { cols: "4" }),
          me(we, { cols: "4" }),
          me(we, { cols: "6" }),
          me(we, { cols: "8" })
        ])
      ]),
      _: 2
    }, [
      s(i) ? void 0 : {
        name: "img",
        fn: N(() => [
          h(g.$slots, "img", {}, () => [
            me(ot, ye(Te(s(b))), null, 16)
          ])
        ]),
        key: "0"
      },
      s(l) ? void 0 : {
        name: "header",
        fn: N(() => [
          h(g.$slots, "header", {}, () => [
            me(we, ye(Te(s(f))), null, 16)
          ])
        ]),
        key: "1"
      },
      s(n) ? void 0 : {
        name: "footer",
        fn: N(() => [
          h(g.$slots, "footer", {}, () => [
            s(a) ? (d(), O(we, ye(U({ key: 1 }, s(v))), null, 16)) : (d(), O(ll, ye(U({ key: 0 }, s(v))), null, 16))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-bottom"]));
  }
}), vt = /* @__PURE__ */ x({
  __name: "BTableSimple",
  props: {
    bordered: { default: !1 },
    borderless: { default: !1 },
    borderVariant: null,
    captionTop: { default: !1 },
    dark: { default: !1 },
    hover: { default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { default: !1 },
    small: { default: !1 },
    tableClass: null,
    tableVariant: null,
    stickyHeader: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(o(t, "captionTop")), l = r(o(t, "borderless")), n = r(o(t, "bordered")), i = r(o(t, "dark")), c = r(o(t, "hover")), f = r(o(t, "small")), v = r(o(t, "striped")), b = r(o(t, "stickyHeader")), g = u(() => [
      "table",
      "b-table",
      {
        "table-bordered": n.value,
        "table-borderless": l.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
        "caption-top": a.value,
        "table-dark": i.value,
        "table-hover": c.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": v.value,
        "table-sm": f.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== void 0
      },
      t.tableClass
    ]), B = u(() => [
      {
        "table-responsive": t.responsive === !0,
        [`table-responsive-${t.responsive}`]: typeof t.responsive == "string",
        "b-table-sticky-header": b.value
      }
    ]);
    return (p, k) => e.responsive ? (d(), m("div", {
      key: 1,
      class: F(s(B))
    }, [
      H("table", {
        role: "table",
        class: F(s(g))
      }, [
        h(p.$slots, "default")
      ], 2)
    ], 2)) : (d(), m("table", {
      key: 0,
      role: "table",
      class: F(s(g))
    }, [
      h(p.$slots, "default")
    ], 2));
  }
}), Fr = /* @__PURE__ */ x({
  __name: "BPlaceholderTable",
  props: {
    rows: { default: 3 },
    columns: { default: 5 },
    cellWidth: { default: 100 },
    size: null,
    animation: null,
    variant: null,
    headerColumns: null,
    hideHeader: { default: !1 },
    headerCellWidth: { default: 100 },
    headerSize: null,
    headerAnimation: null,
    headerVariant: null,
    footerColumns: null,
    showFooter: { default: !1 },
    footerCellWidth: { default: 100 },
    footerSize: null,
    footerAnimation: null,
    footerVariant: null
  },
  setup(e) {
    const t = e, a = u(
      () => typeof t.columns == "string" ? Ue(t.columns, 5) : t.columns
    ), l = u(
      () => typeof t.rows == "string" ? Ue(t.rows, 3) : t.rows
    ), n = u(
      () => t.headerColumns === void 0 ? a.value : typeof t.headerColumns == "string" ? Ue(t.headerColumns, a.value) : t.headerColumns
    ), i = u(
      () => t.footerColumns === void 0 ? a.value : typeof t.footerColumns == "string" ? Ue(t.footerColumns, a.value) : t.footerColumns
    ), c = u(() => ({
      size: t.size,
      variant: t.variant,
      animation: t.animation,
      width: t.cellWidth
    })), f = u(() => ({
      size: t.headerSize,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      width: t.headerCellWidth
    })), v = u(() => ({
      size: t.footerSize,
      variant: t.footerVariant,
      animation: t.footerAnimation,
      width: t.footerCellWidth
    })), b = r(o(t, "hideHeader")), g = r(o(t, "showFooter"));
    return (B, p) => (d(), O(vt, null, {
      default: N(() => [
        s(b) ? j("", !0) : h(B.$slots, "thead", { key: 0 }, () => [
          H("thead", null, [
            H("tr", null, [
              (d(!0), m(le, null, ie(s(n), (k, C) => (d(), m("th", { key: C }, [
                me(we, ye(Te(s(f))), null, 16)
              ]))), 128))
            ])
          ])
        ]),
        h(B.$slots, "default", {}, () => [
          H("tbody", null, [
            (d(!0), m(le, null, ie(s(l), (k, C) => (d(), m("tr", { key: C }, [
              (d(!0), m(le, null, ie(s(a), (y, S) => (d(), m("td", { key: S }, [
                me(we, ye(Te(s(c))), null, 16)
              ]))), 128))
            ]))), 128))
          ])
        ]),
        s(g) ? h(B.$slots, "tfoot", { key: 1 }, () => [
          H("tfoot", null, [
            H("tr", null, [
              (d(!0), m(le, null, ie(s(i), (k, C) => (d(), m("th", { key: C }, [
                me(we, ye(Te(s(v))), null, 16)
              ]))), 128))
            ])
          ])
        ]) : j("", !0)
      ]),
      _: 3
    }));
  }
}), Or = /* @__PURE__ */ x({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "loading"));
    return (l, n) => s(a) ? h(l.$slots, "loading", { key: 0 }) : h(l.$slots, "default", { key: 1 });
  }
}), zr = x({
  props: {
    container: {
      type: [String, Object],
      default: "body"
    },
    content: { type: String },
    id: { type: String },
    customClass: { type: String, default: "" },
    noninteractive: { type: [Boolean, String], default: !1 },
    placement: { type: String, default: "right" },
    target: {
      type: [String, Object],
      default: void 0
    },
    title: { type: String },
    delay: { type: [Number, Object], default: 0 },
    triggers: { type: String, default: "click" },
    show: { type: [Boolean, String], default: !1 },
    variant: { type: String, default: void 0 },
    html: { type: [Boolean, String], default: !0 },
    sanitize: { type: [Boolean, String], default: !1 },
    offset: { type: String, default: "0" }
  },
  emits: ["show", "shown", "hide", "hidden", "inserted"],
  setup(e, { emit: t, slots: a }) {
    r(o(e, "noninteractive"));
    const l = r(o(e, "show")), n = r(o(e, "html")), i = r(o(e, "sanitize")), c = W(), f = W(), v = W(), b = W(), g = W(), B = u(() => ({
      [`b-popover-${e.variant}`]: e.variant !== void 0
    })), p = (y) => {
      if (typeof y == "string")
        return y;
      if (y instanceof HTMLElement)
        return y;
      if (typeof y < "u")
        return y.$el;
    }, k = (y) => {
      if (!!y) {
        if (typeof y == "string") {
          const S = document.getElementById(y);
          return S || void 0;
        }
        return y;
      }
    }, C = (y) => {
      f.value = k(p(y)), f.value && (v.value = new St(f.value, {
        customClass: e.customClass,
        container: p(e.container),
        trigger: e.triggers,
        placement: e.placement,
        title: e.title || a.title ? b.value : "",
        content: g.value,
        html: n.value,
        delay: e.delay,
        sanitize: i.value,
        offset: e.offset
      }));
    };
    return ge(() => {
      var y, S, $;
      Oe(() => {
        C(e.target);
      }), (S = (y = c.value) == null ? void 0 : y.parentNode) == null || S.removeChild(c.value), l.value && (($ = v.value) == null || $.show());
    }), rt(() => {
      var y;
      (y = v.value) == null || y.dispose();
    }), re(
      () => e.target,
      (y) => {
        var S;
        (S = v.value) == null || S.dispose(), C(y);
      }
    ), re(
      () => l.value,
      (y, S) => {
        var $, z;
        y !== S && (y ? ($ = v.value) == null || $.show() : (z = v.value) == null || z.hide());
      }
    ), ve(f, "show.bs.popover", () => t("show")), ve(f, "shown.bs.popover", () => t("shown")), ve(f, "hide.bs.popover", () => t("hide")), ve(f, "hidden.bs.popover", () => t("hidden")), ve(f, "inserted.bs.popover", () => t("inserted")), {
      element: c,
      titleRef: b,
      contentRef: g,
      classes: B
    };
  }
}), Pr = ["id"], Nr = { ref: "titleRef" }, Lr = { ref: "contentRef" };
function Er(e, t, a, l, n, i) {
  return d(), m("div", {
    id: e.id,
    ref: "element",
    class: F(["popover b-popover", e.classes]),
    role: "tooltip",
    tabindex: "-1"
  }, [
    H("div", Nr, [
      h(e.$slots, "title", {}, () => [
        Y(q(e.title), 1)
      ])
    ], 512),
    H("div", Lr, [
      h(e.$slots, "default", {}, () => [
        Y(q(e.content), 1)
      ])
    ], 512)
  ], 10, Pr);
}
const Hr = /* @__PURE__ */ Be(zr, [["render", Er]]), Dr = ["aria-valuenow", "aria-valuemax"], nl = /* @__PURE__ */ x({
  __name: "BProgressBar",
  props: {
    animated: { default: !1 },
    label: null,
    labelHtml: null,
    max: null,
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "animated")), l = r(o(t, "showProgress")), n = r(o(t, "showValue")), i = r(o(t, "striped")), c = Fe(ol), f = u(() => ({
      "progress-bar-animated": a.value || (c == null ? void 0 : c.animated),
      "progress-bar-striped": i.value || (c == null ? void 0 : c.striped) || a.value || (c == null ? void 0 : c.animated),
      [`bg-${t.variant}`]: t.variant !== void 0
    })), v = u(
      () => typeof t.precision == "number" ? t.precision : Number.parseFloat(t.precision)
    ), b = u(
      () => typeof t.value == "number" ? t.value : Number.parseFloat(t.value)
    ), g = u(
      () => typeof t.max == "number" ? t.max : t.max === void 0 ? void 0 : Number.parseFloat(t.max)
    ), B = u(
      () => t.labelHtml !== void 0 ? t.labelHtml : n.value || (c == null ? void 0 : c.showValue) ? b.value.toFixed(v.value) : l.value || (c == null ? void 0 : c.showProgress) ? (b.value * 100 / (g.value || 100)).toFixed(v.value) : t.label !== void 0 ? t.label : ""
    ), p = u(
      () => c != null && c.max ? `${b.value * 100 / (typeof c.max == "number" ? c.max : Number.parseInt(c.max))}%` : t.max ? `${b.value * 100 / (typeof t.max == "number" ? t.max : Number.parseInt(t.max))}%` : typeof t.value == "string" ? t.value : `${t.value}%`
    );
    return (k, C) => (d(), m("div", {
      class: F(["progress-bar", s(f)]),
      role: "progressbar",
      "aria-valuenow": e.value,
      "aria-valuemin": "0",
      "aria-valuemax": e.max,
      style: ze({ width: s(p) })
    }, [
      h(k.$slots, "default", {}, () => [
        Y(q(s(B)), 1)
      ])
    ], 14, Dr));
  }
}), ol = Symbol(), qr = /* @__PURE__ */ x({
  __name: "BProgress",
  props: {
    variant: null,
    max: null,
    height: null,
    animated: { default: !1 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 }
  },
  setup(e) {
    const t = e, a = r(o(t, "animated")), l = r(o(t, "showProgress")), n = r(o(t, "showValue")), i = r(o(t, "striped")), c = u(() => ({
      animated: a.value,
      max: t.max,
      precision: t.precision,
      showProgress: l.value,
      showValue: n.value,
      striped: i.value,
      value: t.value,
      variant: t.variant
    }));
    return Me(ol, {
      animated: a.value,
      max: t.max,
      showProgress: l.value,
      showValue: n.value,
      striped: i.value
    }), (f, v) => (d(), m("div", {
      class: "progress",
      style: ze({ height: e.height })
    }, [
      h(f.$slots, "default", {}, () => [
        me(nl, ye(Te(s(c))), null, 16)
      ])
    ], 4));
  }
}), sa = ct("cols", [""], { type: [String, Number], default: null }), Rr = x({
  name: "BRow",
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...sa
  },
  setup(e) {
    const t = r(o(e, "noGutters")), a = pa(e, sa, "cols", "row-cols");
    return {
      classes: u(() => ({
        [`gx-${e.gutterX}`]: e.gutterX !== null,
        [`gy-${e.gutterY}`]: e.gutterY !== null,
        "g-0": t.value,
        [`align-items-${e.alignV}`]: e.alignV !== null,
        [`justify-content-${e.alignH}`]: e.alignH !== null,
        [`align-content-${e.alignContent}`]: e.alignContent !== null
      })),
      rowColsClasses: a
    };
  }
});
function jr(e, t, a, l, n, i) {
  return d(), O(J(e.tag), {
    class: F(["row", [e.classes, e.rowColsClasses]])
  }, {
    default: N(() => [
      h(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const Mr = /* @__PURE__ */ Be(Rr, [["render", jr]]), at = /* @__PURE__ */ x({
  __name: "BSkeleton",
  props: {
    height: null,
    width: null,
    size: null,
    animation: { default: "wave" },
    type: { default: "text" },
    variant: null
  },
  setup(e) {
    const t = e, a = u(() => [
      `b-skeleton-${t.type}`,
      {
        [`b-skeleton-animate-${t.animation}`]: typeof t.animation == "boolean" ? !1 : t.animation,
        [`bg-${t.variant}`]: t.variant !== void 0
      }
    ]), l = u(() => ({
      width: t.size || t.width,
      height: t.size || t.height
    }));
    return (n, i) => (d(), m("div", {
      class: F(["b-skeleton", s(a)]),
      style: ze(s(l))
    }, null, 6));
  }
}), Gr = /* @__PURE__ */ x({
  __name: "BSkeletonIcon",
  props: {
    animation: { default: "wave" }
  },
  setup(e) {
    const t = e, a = u(() => [`b-skeleton-animate-${t.animation}`]);
    return (l, n) => (d(), m("div", {
      class: F(["b-skeleton-icon-wrapper position-relative d-inline-block overflow-hidden", s(a)])
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), Ur = { key: 0 }, Wr = { key: 1 }, Xr = /* @__PURE__ */ x({
  __name: "BSkeletonTable",
  props: {
    animation: { default: "wave" },
    columns: { default: 5 },
    hideHeader: { default: !1 },
    rows: { default: 3 },
    showFooter: { default: !1 },
    tableProps: null
  },
  setup(e) {
    const t = e, a = r(o(t, "hideHeader")), l = r(o(t, "showFooter"));
    return (n, i) => (d(), O(vt, ye(Te(e.tableProps)), {
      default: N(() => [
        s(a) ? j("", !0) : (d(), m("thead", Ur, [
          H("tr", null, [
            (d(!0), m(le, null, ie(e.columns, (c, f) => (d(), m("th", { key: f }, [
              me(at)
            ]))), 128))
          ])
        ])),
        H("tbody", null, [
          (d(!0), m(le, null, ie(e.rows, (c, f) => (d(), m("tr", { key: f }, [
            (d(!0), m(le, null, ie(e.columns, (v, b) => (d(), m("td", { key: b }, [
              me(at, { width: "75%" })
            ]))), 128))
          ]))), 128))
        ]),
        s(l) ? (d(), m("tfoot", Wr, [
          H("tr", null, [
            (d(!0), m(le, null, ie(e.columns, (c, f) => (d(), m("th", { key: f }, [
              me(at)
            ]))), 128))
          ])
        ])) : j("", !0)
      ]),
      _: 1
    }, 16));
  }
}), Kr = /* @__PURE__ */ x({
  __name: "BSkeletonWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(o(e, "loading"));
    return (l, n) => s(a) ? h(l.$slots, "loading", { key: 0 }) : h(l.$slots, "default", { key: 1 });
  }
}), Jr = () => {
  const e = (f, v) => {
    const b = [];
    return !(f != null && f.length) && (v == null ? void 0 : v.length) ? (Object.keys(v[0]).forEach((g) => b.push({ key: g, label: jt(g) })), b) : (Array.isArray(f) && f.forEach((g) => {
      typeof g == "string" ? b.push({ key: g, label: jt(g) }) : wl(g) && g.key && typeof g.key == "string" && b.push({ ...g });
    }), b);
  }, t = W([]), a = (f, v, b, g) => {
    if (t.value = lt(v), "isFilterableTable" in g && g.isFilterableTable.value === !0 && b.filter && (t.value = i(t.value, b.filter, b.filterable), l.value && l.value(t.value)), "isSortable" in g && g.isSortable.value === !0 && (t.value = n(
      f,
      t.value,
      {
        key: b.sortBy,
        desc: g.sortDescBoolean.value
      },
      b.sortCompare
    )), b.perPage !== void 0) {
      const B = (b.currentPage - 1) * b.perPage;
      t.value = t.value.splice(B, b.perPage);
    }
    return t.value;
  }, l = W(void 0), n = (f, v, b, g) => {
    if (!b || !b.key)
      return v;
    const B = b.key;
    return v.sort((p, k) => {
      if (g !== void 0)
        return g(p, k, b.key, b.desc);
      const C = ($) => typeof $ == "object" ? JSON.stringify($) : $;
      return C(p[B]) > C(k[B]) ? b.desc ? -1 : 1 : C(k[B]) > C(p[B]) ? b.desc ? 1 : -1 : 0;
    });
  }, i = (f, v, b) => f.filter(
    (g) => Object.entries(g).filter((B) => {
      const [p, k] = B;
      return p[0] === "_" || b.length > 0 && !b.includes(p) ? !1 : (typeof k == "object" ? JSON.stringify(Object.values(k)) : typeof k == "string" ? k : k.toString()).toLowerCase().includes(v.toLowerCase());
    }).length > 0
  );
  return {
    normaliseFields: e,
    mapItems: a,
    internalItems: t,
    updateInternalItems: async (f) => {
      try {
        return t.value = await Ct(f), t.value;
      } catch {
        return;
      }
    },
    filterEvent: l
  };
}, Yr = ["title", "abbr", "onClick"], Zr = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, Qr = {
  key: 0,
  class: "b-table-sort-icon text-muted small"
}, ei = { key: 1 }, ti = ["onClick", "onDblclick", "onMouseenter", "onMouseleave"], ai = ["colspan"], li = ["colspan"], ni = { class: "d-flex align-items-center justify-content-center gap-2" }, oi = /* @__PURE__ */ H("strong", null, "Loading...", -1), si = {
  key: 1,
  class: "b-table-empty-slot"
}, ri = ["colspan"], ii = { key: 0 }, ui = ["title", "abbr", "onClick"], di = { key: 1 }, ci = { key: 2 }, fi = { key: 3 }, vi = /* @__PURE__ */ x({
  __name: "BTable",
  props: {
    align: null,
    caption: null,
    captionTop: { default: !1 },
    borderless: { default: !1 },
    bordered: { default: !1 },
    borderVariant: null,
    dark: { default: !1 },
    fields: { default: () => [] },
    footClone: { default: !1 },
    hover: { default: !1 },
    items: { default: () => [] },
    provider: null,
    sortCompare: null,
    noProvider: null,
    noProviderPaging: null,
    noProviderSorting: null,
    noProviderFiltering: null,
    responsive: { type: [Boolean, String], default: !1 },
    small: { default: !1 },
    striped: { default: !1 },
    variant: null,
    sortBy: null,
    sortDesc: { default: !1 },
    sortInternal: { default: !0 },
    selectable: { default: !1 },
    stickySelect: { default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "single" },
    selectionVariant: { default: "primary" },
    stickyHeader: { default: !1 },
    busy: { default: !1 },
    showEmpty: { default: !1 },
    perPage: null,
    currentPage: { default: 1 },
    filter: null,
    filterable: null,
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" }
  },
  emits: ["headClicked", "rowClicked", "rowDblClicked", "rowHovered", "rowUnhovered", "rowSelected", "rowUnselected", "selection", "update:busy", "update:sortBy", "update:sortDesc", "sorted", "filtered"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = r(o(l, "footClone")), i = r(o(l, "sortDesc")), c = r(o(l, "sortInternal")), f = r(o(l, "selectable")), v = r(o(l, "stickySelect")), b = r(o(l, "busy")), g = r(o(l, "showEmpty")), B = r(o(l, "showEmpty")), p = r(o(l, "showEmpty")), k = r(o(l, "showEmpty")), C = W(b.value), y = He(), S = u(() => ({
      [`align-${l.align}`]: l.align !== void 0,
      "b-table-selectable": f.value,
      [`b-table-select-${l.selectMode}`]: f.value,
      "b-table-selecting user-select-none": f.value && $e.value,
      "b-table-busy": C.value,
      "b-table-sortable": se.value,
      "b-table-sort-desc": se.value && i.value === !0,
      "b-table-sort-asc": se.value && i.value === !1
    })), $ = u(() => ({
      bordered: l.bordered,
      borderless: l.borderless,
      borderVariant: l.borderVariant,
      captionTop: l.captionTop,
      dark: l.dark,
      hover: l.hover,
      responsive: l.responsive,
      striped: l.striped,
      small: l.small,
      tableClass: S.value,
      tableVariant: l.variant,
      stickyHeader: l.stickyHeader
    })), z = Jr();
    z.filterEvent.value = async (w) => {
      if (I.value) {
        await _e();
        return;
      }
      const E = await Ct(w);
      a("filtered", E);
    };
    const L = u(() => z.normaliseFields(l.fields, l.items)), V = u(
      () => L.value.length + (f.value ? 1 : 0)
    ), A = u(() => l.filter !== void 0 && l.filter !== ""), I = u(() => l.provider !== void 0), M = u(() => se.value && c.value === !0), _ = u(() => I.value ? z.internalItems.value : M.value ? z.mapItems(l.fields, l.items, l, {
      isSortable: se,
      isFilterableTable: A,
      sortDescBoolean: i
    }) : l.items), T = (w) => typeof w == "string" ? Mt(w) : w.label !== void 0 ? w.label : typeof w.key == "string" ? Mt(w.key) : w.key, D = (w, E, oe = !1) => {
      const P = typeof w == "string" ? w : w.key;
      a("headClicked", P, w, E, oe), ee(w);
    }, R = (w, E, oe) => {
      a("rowClicked", w, E, oe), ke(w, E, oe.shiftKey);
    }, ne = (w, E, oe) => a("rowDblClicked", w, E, oe), ae = (w, E, oe) => a("rowHovered", w, E, oe), K = (w, E, oe) => a("rowUnhovered", w, E, oe), de = u(
      () => f.value && (!!l.selectHead || y.selectHead !== void 0)
    ), se = u(
      () => l.fields.filter((w) => typeof w == "string" ? !1 : w.sortable).length > 0
    ), ee = (w) => {
      if (!se.value)
        return;
      const E = typeof w == "string" ? w : w.key, oe = typeof w == "string" ? !1 : w.sortable;
      if (se.value === !0 && oe === !0) {
        const P = !i.value;
        E !== l.sortBy && a("update:sortBy", E), a("update:sortDesc", P), a("sorted", E, P);
      }
    }, Z = W(/* @__PURE__ */ new Set([])), $e = u(() => Z.value.size > 0), ue = () => {
      !f.value || a("selection", Array.from(Z.value));
    }, ke = (w, E, oe = !1) => {
      if (!!f.value) {
        if (Z.value.has(w))
          Z.value.delete(w), a("rowUnselected", w);
        else if (l.selectMode === "single" && Z.value.size > 0 && (Z.value.forEach((P) => a("rowUnselected", P)), Z.value.clear()), l.selectMode === "range" && Z.value.size > 0 && oe) {
          const P = Array.from(Z.value).pop(), pe = _.value.findIndex((Le) => Le === P), ce = Math.min(pe, E), pt = Math.max(pe, E);
          _.value.slice(ce, pt + 1).forEach((Le) => {
            Z.value.has(Le) || (Z.value.add(Le), a("rowSelected", Le));
          });
        } else
          Z.value.add(w), a("rowSelected", w);
        ue();
      }
    }, _e = async () => {
      if (!I.value || !l.provider || C.value)
        return;
      C.value = !0;
      const w = new Proxy(
        {
          currentPage: l.currentPage,
          filter: l.filter,
          sortBy: l.sortBy,
          sortDesc: l.sortDesc,
          perPage: l.perPage
        },
        {
          get(oe, P) {
            return P in oe ? oe[P] : void 0;
          },
          set() {
            return console.error("BTable provider context is a read-only object."), !0;
          }
        }
      ), E = l.provider(w, z.updateInternalItems);
      if (E !== void 0) {
        if (E instanceof Promise)
          try {
            const oe = await E;
            return Array.isArray(oe) ? await z.updateInternalItems(oe) : void 0;
          } finally {
            C.value || (C.value = !1);
          }
        try {
          return await z.updateInternalItems(E);
        } finally {
          C.value && (C.value = !1);
        }
      }
    }, X = (w) => {
      w._showDetails = !w._showDetails;
    }, te = (w) => [
      w.class,
      w.thClass,
      w.variant ? `table-${w.variant}` : void 0,
      {
        "b-table-sortable-column": se.value && w.sortable,
        "b-table-sticky-column": w.stickyColumn
      }
    ], G = (w, E) => [
      w.class,
      w.tdClass,
      w.variant ? `table-${w.variant}` : void 0,
      (E == null ? void 0 : E._cellVariants) && (E == null ? void 0 : E._cellVariants[w.key]) ? `table-${E == null ? void 0 : E._cellVariants[w.key]}` : void 0,
      {
        "b-table-sticky-column": w.stickyColumn
      }
    ], be = (w) => [
      w._rowVariant ? `table-${w._rowVariant}` : null,
      w._rowVariant ? `table-${w._rowVariant}` : null,
      f.value && Z.value.has(w) ? `selected table-${l.selectionVariant}` : null
    ], Ae = () => {
      if (!f.value)
        return;
      const w = Z.value.size > 0 ? Array.from(Z.value) : [];
      Z.value = /* @__PURE__ */ new Set([..._.value]), Z.value.forEach((E) => {
        w.includes(E) || a("rowSelected", E);
      }), ue();
    }, mt = () => {
      !f.value || (Z.value.forEach((w) => {
        a("rowUnselected", w);
      }), Z.value = /* @__PURE__ */ new Set([]), ue());
    }, bt = (w) => {
      if (!f.value)
        return;
      const E = _.value[w];
      !E || Z.value.has(E) || (Z.value.add(E), a("rowSelected", E), ue());
    }, gt = (w) => {
      if (!f.value)
        return;
      const E = _.value[w];
      !E || !Z.value.has(E) || (Z.value.delete(E), a("rowUnselected", E), ue());
    };
    ge(() => {
      I.value && _e();
    }), re(
      () => l.filter,
      (w, E) => {
        w === E || I.value || w || Ct(l.items).then((oe) => a("filtered", oe));
      }
    );
    const Ne = async (w, E, oe) => {
      if (E === oe)
        return;
      const P = (Le) => l.noProvider && l.noProvider.includes(Le), pe = ["currentPage", "perPage"].includes(w) && (P("paging") || B.value === !0), ce = ["filter"].includes(w) && (P("filtering") || k.value === !0), pt = ["sortBy", "sortDesc"].includes(w) && (P("sorting") || p.value === !0);
      pe || ce || pt || await _e();
    };
    return re(
      () => C.value,
      () => C.value !== b.value && a("update:busy", C.value)
    ), re(
      () => b.value,
      () => C.value !== b.value && (C.value = b.value)
    ), re(
      () => l.filter,
      (w, E) => Ne("filter", w, E)
    ), re(
      () => l.currentPage,
      (w, E) => Ne("currentPage", w, E)
    ), re(
      () => l.perPage,
      (w, E) => Ne("perPage", w, E)
    ), re(
      () => l.sortBy,
      (w, E) => Ne("sortBy", w, E)
    ), re(
      () => l.sortDesc,
      (w, E) => Ne("sortDesc", w, E)
    ), t({
      selectAllRows: Ae,
      clearSelected: mt,
      selectRow: bt,
      unselectRow: gt
    }), (w, E) => (d(), O(vt, ye(Te(s($))), {
      default: N(() => {
        var oe;
        return [
          H("thead", null, [
            w.$slots["thead-top"] ? h(w.$slots, "thead-top", { key: 0 }) : j("", !0),
            H("tr", null, [
              s(de) ? (d(), m("th", {
                key: 0,
                class: F(["b-table-selection-column", {
                  "b-table-sticky-column": s(v)
                }])
              }, [
                h(w.$slots, "select-head", {}, () => [
                  Y(q(typeof e.selectHead == "boolean" ? "Selected" : e.selectHead), 1)
                ])
              ], 2)) : j("", !0),
              (d(!0), m(le, null, ie(s(L), (P) => (d(), m("th", U({
                key: P.key,
                scope: "col",
                class: te(P),
                title: P.headerTitle,
                abbr: P.headerAbbr,
                style: P.thStyle
              }, P.thAttr, {
                onClick: (pe) => D(P, pe)
              }), [
                H("div", Zr, [
                  h(w.$slots, "sort-icon", {
                    field: P,
                    sortBy: e.sortBy,
                    selected: P.key === e.sortBy,
                    isDesc: s(i),
                    direction: s(i) ? "desc" : "asc"
                  }, () => [
                    s(se) && P.sortable && P.key === e.sortBy ? (d(), m("span", Qr)) : j("", !0)
                  ]),
                  H("div", null, [
                    w.$slots["head(" + P.key + ")"] || w.$slots["head()"] ? h(w.$slots, w.$slots["head(" + P.key + ")"] ? "head(" + P.key + ")" : "head()", {
                      key: 0,
                      label: P.label
                    }) : (d(), m(le, { key: 1 }, [
                      Y(q(T(P)), 1)
                    ], 64))
                  ])
                ])
              ], 16, Yr))), 128))
            ]),
            w.$slots["thead-sub"] ? (d(), m("tr", ei, [
              (d(!0), m(le, null, ie(s(L), (P) => (d(), m("td", {
                key: P.key,
                scope: "col",
                class: F([P.class, P.thClass, P.variant ? `table-${P.variant}` : ""])
              }, [
                w.$slots["thead-sub"] ? h(w.$slots, "thead-sub", U({
                  key: 0,
                  items: s(L)
                }, P)) : (d(), m(le, { key: 1 }, [
                  Y(q(P.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : j("", !0)
          ]),
          H("tbody", null, [
            (d(!0), m(le, null, ie(s(_), (P, pe) => (d(), m(le, { key: pe }, [
              H("tr", {
                class: F(be(P)),
                onClick: (ce) => R(P, pe, ce),
                onDblclick: (ce) => ne(P, pe, ce),
                onMouseenter: (ce) => ae(P, pe, ce),
                onMouseleave: (ce) => K(P, pe, ce)
              }, [
                s(de) ? (d(), m("td", {
                  key: 0,
                  class: F(["b-table-selection-column", {
                    "b-table-sticky-column": s(v)
                  }])
                }, [
                  h(w.$slots, "select-cell", {}, () => [
                    H("span", {
                      class: F(Z.value.has(P) ? "text-primary" : "")
                    }, "\u{1F5F9}", 2)
                  ])
                ], 2)) : j("", !0),
                (d(!0), m(le, null, ie(s(L), (ce) => (d(), m("td", U({
                  key: ce.key
                }, ce.tdAttr, {
                  class: G(ce, P)
                }), [
                  w.$slots["cell(" + ce.key + ")"] || w.$slots["cell()"] ? h(w.$slots, w.$slots["cell(" + ce.key + ")"] ? "cell(" + ce.key + ")" : "cell()", {
                    key: 0,
                    value: P[ce.key],
                    index: pe,
                    item: P,
                    field: ce,
                    items: e.items,
                    toggleDetails: () => X(P),
                    detailsShowing: P._showDetails
                  }) : (d(), m(le, { key: 1 }, [
                    Y(q(P[ce.key]), 1)
                  ], 64))
                ], 16))), 128))
              ], 42, ti),
              P._showDetails === !0 && w.$slots["row-details"] ? (d(), m("tr", {
                key: 0,
                class: F(be(P))
              }, [
                H("td", { colspan: s(V) }, [
                  h(w.$slots, "row-details", {
                    item: P,
                    toggleDetails: () => X(P)
                  })
                ], 8, ai)
              ], 2)) : j("", !0)
            ], 64))), 128)),
            C.value ? (d(), m("tr", {
              key: 0,
              class: F(["b-table-busy-slot", { "b-table-static-busy": s(_).length == 0 }])
            }, [
              H("td", { colspan: s(V) }, [
                h(w.$slots, "table-busy", {}, () => [
                  H("div", ni, [
                    me(Ht, { class: "align-middle" }),
                    oi
                  ])
                ])
              ], 8, li)
            ], 2)) : j("", !0),
            s(g) && s(_).length === 0 ? (d(), m("tr", si, [
              H("td", { colspan: s(V) }, [
                h(w.$slots, "empty", {
                  items: s(_),
                  filtered: s(A)
                }, () => [
                  Y(q(s(A) ? e.emptyFilteredText : e.emptyText), 1)
                ])
              ], 8, ri)
            ])) : j("", !0)
          ]),
          s(n) ? (d(), m("tfoot", ii, [
            H("tr", null, [
              (d(!0), m(le, null, ie(s(L), (P) => (d(), m("th", U({
                key: P.key
              }, P.thAttr, {
                scope: "col",
                class: [P.class, P.thClass, P.variant ? `table-${P.variant}` : ""],
                title: P.headerTitle,
                abbr: P.headerAbbr,
                style: P.thStyle,
                onClick: (pe) => D(P, pe, !0)
              }), q(P.label), 17, ui))), 128))
            ])
          ])) : w.$slots["custom-foot"] ? (d(), m("tfoot", di, [
            h(w.$slots, "custom-foot", {
              fields: s(L),
              items: e.items,
              columns: (oe = s(L)) == null ? void 0 : oe.length
            })
          ])) : j("", !0),
          w.$slots["table-caption"] ? (d(), m("caption", ci, [
            h(w.$slots, "table-caption")
          ])) : e.caption ? (d(), m("caption", fi, q(e.caption), 1)) : j("", !0)
        ];
      }),
      _: 3
    }, 16));
  }
}), mi = /* @__PURE__ */ x({
  __name: "BTbody",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = u(() => ({
      [`thead-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("tbody", {
      role: "rowgroup",
      class: F(s(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), bi = ["scope", "colspan", "rowspan", "data-label"], gi = { key: 0 }, pi = /* @__PURE__ */ x({
  __name: "BTd",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "stickyColumn")), l = u(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && !t.variant
    })), n = u(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (i, c) => (d(), m("td", {
      role: "cell",
      scope: s(n),
      class: F(s(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading ? (d(), m("div", gi, [
        h(i.$slots, "default")
      ])) : h(i.$slots, "default", { key: 1 })
    ], 10, bi));
  }
}), hi = /* @__PURE__ */ x({
  __name: "BTfoot",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = u(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("tfoot", {
      role: "rowgroup",
      class: F(s(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), yi = ["scope", "colspan", "rowspan", "data-label"], Bi = { key: 0 }, $i = /* @__PURE__ */ x({
  __name: "BTh",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(o(t, "stickyColumn")), l = u(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = u(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (i, c) => (d(), m("th", {
      role: "columnheader",
      scope: s(n),
      class: F(s(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading !== void 0 ? (d(), m("div", Bi, [
        h(i.$slots, "default")
      ])) : h(i.$slots, "default", { key: 1 })
    ], 10, yi));
  }
}), ki = /* @__PURE__ */ x({
  __name: "BThead",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = u(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("thead", {
      role: "rowgroup",
      class: F(s(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), Si = /* @__PURE__ */ x({
  __name: "BTr",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = u(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("tr", {
      role: "row",
      class: F(s(a))
    }, [
      h(l.$slots, "default")
    ], 2));
  }
}), Ci = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], sl = Symbol(), wi = /* @__PURE__ */ x({
  __name: "BTabs",
  props: {
    activeNavItemClass: null,
    activeTabClass: null,
    align: null,
    card: { default: !1 },
    contentClass: null,
    end: { default: !1 },
    fill: { default: !1 },
    id: null,
    justified: { default: !1 },
    lazy: { default: !1 },
    navClass: null,
    navWrapperClass: null,
    noFade: { default: !1 },
    noNavStyle: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tag: { default: "div" },
    vertical: { default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const a = e, l = r(o(a, "card")), n = r(o(a, "end")), i = r(o(a, "fill")), c = r(o(a, "justified")), f = r(o(a, "lazy")), v = r(o(a, "noFade")), b = r(o(a, "noNavStyle")), g = r(o(a, "pills")), B = r(o(a, "small")), p = r(o(a, "vertical")), k = He(), C = W(a.modelValue), y = W(""), S = u({
      get: () => C.value,
      set: (_) => {
        C.value = _, $.value.length > 0 && _ >= 0 && _ < $.value.length ? y.value = $.value[_].buttonId : y.value = "", t("update:modelValue", _);
      }
    }), $ = u(() => {
      let _ = [];
      return k.default && (_ = M(k).map((T, D) => {
        T.props || (T.props = {});
        const R = T.props["button-id"] || xe("tab"), ne = T.props.id || xe(), ae = S.value > -1 ? D === S.value : T.props.active === "", K = T.props["title-item-class"], de = T.props["title-link-attributes"];
        return {
          buttonId: R,
          contentId: ne,
          active: ae,
          disabled: T.props.disabled === "" || T.props.disabled === !0,
          navItemClasses: [
            {
              active: ae,
              disabled: T.props.disabled === "" || T.props.disabled === !0
            },
            ae && a.activeNavItemClass ? a.activeNavItemClass : null,
            T.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !v.value
            },
            ae && a.activeTabClass ? a.activeTabClass : null
          ],
          target: `#${ne}`,
          title: T.props.title,
          titleItemClass: K,
          titleLinkAttributes: de,
          onClick: T.props.onClick,
          tab: T
        };
      })), _;
    }), z = u(() => !(($ == null ? void 0 : $.value) && $.value.length > 0)), L = u(() => ({
      "d-flex": p.value,
      "align-items-start": p.value
    })), V = u(() => ({
      "nav-pills": g.value,
      "flex-column me-3": p.value,
      [`justify-content-${a.align}`]: a.align !== void 0,
      "nav-fill": i.value,
      "card-header-tabs": l.value,
      "nav-justified": c.value,
      "nav-tabs": !b.value && !g.value,
      small: B.value
    })), A = (_) => {
      let T = !1;
      if (_ !== void 0 && _ > -1 && _ < $.value.length && !$.value[_].disabled && (S.value < 0 || $.value[_].buttonId !== y.value)) {
        const D = new dt("activate-tab", { cancelable: !0, vueTarget: this });
        t("activate-tab", _, S.value, D), D.defaultPrevented || (S.value = _, T = !0);
      }
      return !T && a.modelValue !== S.value && t("update:modelValue", S.value), T;
    }, I = (_, T) => {
      var D;
      A(T), T >= 0 && !$.value[T].disabled && ((D = $.value[T]) == null ? void 0 : D.onClick) && typeof $.value[T].onClick == "function" && $.value[T].onClick(_);
    }, M = (_) => !_ || !_.default ? [] : _.default().reduce((T, D) => (typeof D.type == "symbol" ? T = T.concat(D.children) : T.push(D), T), []).filter((T) => {
      var D;
      return ((D = T.type) == null ? void 0 : D.__name) === "BTab";
    });
    return A(C.value), re(
      () => a.modelValue,
      (_, T) => {
        if (_ === T)
          return;
        if (_ = Math.max(_, -1), T = Math.max(T, -1), $.value.length <= 0) {
          S.value = -1;
          return;
        }
        const D = _ > T;
        let R = _;
        const ne = $.value.length - 1;
        for (; R >= 0 && R <= ne && $.value[R].disabled; )
          R += D ? 1 : -1;
        if (R < 0) {
          A(0);
          return;
        }
        if (R >= $.value.length) {
          A($.value.length - 1);
          return;
        }
        A(R);
      }
    ), re(
      () => $.value,
      () => {
        let _ = $.value.map((T) => T.active && !T.disabled).lastIndexOf(!0);
        _ < 0 && (S.value >= $.value.length ? _ = $.value.map((T) => !T.disabled).lastIndexOf(!0) : $.value[S.value] && !$.value[S.value].disabled && (_ = S.value)), _ < 0 && (_ = $.value.map((T) => !T.disabled).indexOf(!0)), $.value.forEach((T, D) => T.active = D === _), A(_);
      }
    ), ge(() => {
      if (S.value < 0 && $.value.length > 0 && !$.value.some((_) => _.active)) {
        const _ = $.value.map((T) => !T.disabled).indexOf(!0);
        A(_ >= 0 ? _ : -1);
      }
    }), Me(sl, {
      lazy: f.value,
      card: l.value
    }), (_, T) => (d(), O(J(e.tag), {
      id: e.id,
      class: F(["tabs", s(L)])
    }, {
      default: N(() => [
        s(n) ? (d(), m("div", {
          key: 0,
          class: F(["tab-content", e.contentClass])
        }, [
          (d(!0), m(le, null, ie(s($), ({ tab: D, contentId: R, tabClasses: ne, active: ae }, K) => (d(), O(J(D), {
            id: R,
            key: K,
            class: F(ne),
            active: ae
          }, null, 8, ["id", "class", "active"]))), 128)),
          s(z) ? (d(), m("div", {
            key: "bv-empty-tab",
            class: F(["tab-pane active", { "card-body": s(l) }])
          }, [
            h(_.$slots, "empty")
          ], 2)) : j("", !0)
        ], 2)) : j("", !0),
        H("div", {
          class: F([e.navWrapperClass, { "card-header": s(l), "ms-auto": e.vertical && s(n) }])
        }, [
          H("ul", {
            class: F(["nav", [s(V), e.navClass]]),
            role: "tablist"
          }, [
            h(_.$slots, "tabs-start"),
            (d(!0), m(le, null, ie(s($), ({ tab: D, buttonId: R, contentId: ne, navItemClasses: ae, active: K, target: de }, se) => (d(), m("li", {
              key: se,
              class: F(["nav-item", D.props["title-item-class"]])
            }, [
              H("button", U({
                id: R,
                class: ["nav-link", ae],
                "data-bs-toggle": "tab",
                "data-bs-target": de,
                role: "tab",
                "aria-controls": ne,
                "aria-selected": K
              }, D.props["title-link-attributes"], {
                onClick: it((ee) => I(ee, se), ["stop", "prevent"])
              }), [
                D.children && D.children.title ? (d(), O(J(D.children.title), { key: 0 })) : (d(), m(le, { key: 1 }, [
                  Y(q(D.props.title), 1)
                ], 64))
              ], 16, Ci)
            ], 2))), 128)),
            h(_.$slots, "tabs-end")
          ], 2)
        ], 2),
        s(n) ? j("", !0) : (d(), m("div", {
          key: 1,
          class: F(["tab-content", e.contentClass])
        }, [
          (d(!0), m(le, null, ie(s($), ({ tab: D, contentId: R, tabClasses: ne, active: ae }, K) => (d(), O(J(D), {
            id: R,
            key: K,
            class: F(ne),
            active: ae
          }, null, 8, ["id", "class", "active"]))), 128)),
          s(z) ? (d(), m("div", {
            key: "bv-empty-tab",
            class: F(["tab-pane active", { "card-body": s(l) }])
          }, [
            h(_.$slots, "empty")
          ], 2)) : j("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Ti = /* @__PURE__ */ x({
  __name: "BTab",
  props: {
    id: null,
    title: null,
    active: { default: !1 },
    buttonId: { default: void 0 },
    disabled: { default: !1 },
    lazy: { default: void 0 },
    lazyOnce: { default: void 0 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: { default: void 0 },
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: { default: void 0 }
  },
  setup(e) {
    const t = e, a = W(!1), l = r(o(t, "active")), n = r(o(t, "disabled")), i = r(o(t, t.lazyOnce !== void 0 ? "lazyOnce" : "lazy")), c = Fe(sl, null), f = u(() => (c == null ? void 0 : c.lazy) || i.value), v = u(() => t.lazyOnce !== void 0), b = u(() => l.value && !n.value), g = u(() => {
      const p = f.value && v.value && a.value;
      return b.value || !f.value || p;
    }), B = u(() => ({
      active: l.value,
      show: l.value,
      "card-body": (c == null ? void 0 : c.card) && t.noBody === !1
    }));
    return re(
      () => g.value,
      (p) => {
        p && !a.value && (a.value = !0);
      }
    ), (p, k) => (d(), O(J(e.tag), {
      id: e.id,
      class: F(["tab-pane", s(B)]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: N(() => [
        s(g) ? h(p.$slots, "default", { key: 0 }) : j("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Vi = {
  BAccordion: Kl,
  BAccordionItem: vn,
  BNavText: or,
  BAlert: bn,
  BAvatar: Bn,
  BAvatarGroup: gn,
  BNavForm: Ys,
  BBadge: wn,
  BBreadcrumb: xn,
  BBreadcrumbItem: Oa,
  BButton: Ke,
  BButtonGroup: zn,
  BButtonToolbar: Nn,
  BCard: Da,
  BCardBody: Ea,
  BCardFooter: Ha,
  BCardGroup: En,
  BCardHeader: Pa,
  BCardImg: ot,
  BCardSubtitle: La,
  BCardText: Hn,
  BCardTitle: Na,
  BCarousel: Jn,
  BCarouselSlide: ao,
  BCloseButton: Ge,
  BCol: We,
  BCollapse: xa,
  BContainer: fo,
  BDropdown: Ua,
  BDropdownDivider: go,
  BDropdownForm: $o,
  BDropdownGroup: wo,
  BDropdownHeader: Ao,
  BDropdownItem: Io,
  BDropdownItemButton: Oo,
  BDropdownText: No,
  BForm: Wa,
  BFormCheckbox: Xa,
  BFormCheckboxGroup: Wo,
  BFormFloatingLabel: Do,
  BFormGroup: ts,
  BFormInput: os,
  BFormInvalidFeedback: xt,
  BFormRadio: Ja,
  BFormRadioGroup: cs,
  BFormRow: tt,
  BFormSelect: bs,
  BFormSelectOption: qt,
  BFormSelectOptionGroup: Ya,
  BFormText: It,
  BFormTextarea: zs,
  BFormTag: Za,
  BFormTags: xs,
  BFormValidFeedback: Ft,
  BImg: Dt,
  BInputGroup: qs,
  BInputGroupAddon: Rt,
  BInputGroupAppend: Rs,
  BInputGroupPrepend: js,
  BInputGroupText: Qa,
  BLink: Ce,
  BListGroup: Ms,
  BListGroupItem: Gs,
  BModal: Ks,
  BNav: Js,
  BNavbar: sr,
  BNavbarBrand: ur,
  BNavbarNav: dr,
  BNavbarToggle: fr,
  BNavItem: tr,
  BNavItemDropdown: lr,
  BOffcanvas: hr,
  BOverlay: $r,
  BPagination: xr,
  BPlaceholder: we,
  BPlaceholderButton: ll,
  BPlaceholderCard: Ir,
  BPlaceholderTable: Fr,
  BPlaceholderWrapper: Or,
  BPopover: Hr,
  BProgress: qr,
  BProgressBar: nl,
  BRow: Mr,
  BSkeleton: at,
  BSkeletonIcon: Gr,
  BSkeletonTable: Xr,
  BSkeletonWrapper: Kr,
  BSpinner: Ht,
  BTab: Ti,
  BTable: vi,
  BTableSimple: vt,
  BTbody: mi,
  BTd: pi,
  BTfoot: hi,
  BTh: $i,
  BThead: ki,
  BTr: Si,
  BToast: ja,
  BToaster: _t,
  BToastContainer: _t,
  BTabs: wi,
  BTransition: st,
  BToastPlugin: co
};
const Ii = {
  install(e, t = {}) {
    Object.entries(Vi).forEach(([a, l]) => {
      e.component(a, l);
    }), Object.entries(rn).forEach(([a, l]) => {
      e.directive(a, l);
    }), Ul(e);
  }
};
export {
  Kl as BAccordion,
  vn as BAccordionItem,
  bn as BAlert,
  Bn as BAvatar,
  gn as BAvatarGroup,
  wn as BBadge,
  xn as BBreadcrumb,
  Oa as BBreadcrumbItem,
  Ke as BButton,
  zn as BButtonGroup,
  Nn as BButtonToolbar,
  Da as BCard,
  Ea as BCardBody,
  Ha as BCardFooter,
  En as BCardGroup,
  Pa as BCardHeader,
  ot as BCardImg,
  La as BCardSubtitle,
  Hn as BCardText,
  Na as BCardTitle,
  Jn as BCarousel,
  ao as BCarouselSlide,
  Ge as BCloseButton,
  We as BCol,
  xa as BCollapse,
  fo as BContainer,
  Ua as BDropdown,
  go as BDropdownDivider,
  $o as BDropdownForm,
  wo as BDropdownGroup,
  Ao as BDropdownHeader,
  Io as BDropdownItem,
  Oo as BDropdownItemButton,
  No as BDropdownText,
  Wa as BForm,
  Xa as BFormCheckbox,
  Wo as BFormCheckboxGroup,
  Do as BFormFloatingLabel,
  ts as BFormGroup,
  os as BFormInput,
  xt as BFormInvalidFeedback,
  Ja as BFormRadio,
  cs as BFormRadioGroup,
  tt as BFormRow,
  bs as BFormSelect,
  qt as BFormSelectOption,
  Ya as BFormSelectOptionGroup,
  Za as BFormTag,
  xs as BFormTags,
  It as BFormText,
  zs as BFormTextarea,
  Ft as BFormValidFeedback,
  Dt as BImg,
  qs as BInputGroup,
  Rt as BInputGroupAddon,
  Rs as BInputGroupAppend,
  js as BInputGroupPrepend,
  Qa as BInputGroupText,
  Ce as BLink,
  Ms as BListGroup,
  Gs as BListGroupItem,
  Ks as BModal,
  Js as BNav,
  Ys as BNavForm,
  tr as BNavItem,
  lr as BNavItemDropdown,
  or as BNavText,
  sr as BNavbar,
  ur as BNavbarBrand,
  dr as BNavbarNav,
  fr as BNavbarToggle,
  hr as BOffcanvas,
  $r as BOverlay,
  xr as BPagination,
  we as BPlaceholder,
  ll as BPlaceholderButton,
  Ir as BPlaceholderCard,
  Fr as BPlaceholderTable,
  Or as BPlaceholderWrapper,
  Hr as BPopover,
  qr as BProgress,
  nl as BProgressBar,
  Mr as BRow,
  at as BSkeleton,
  Gr as BSkeletonIcon,
  Xr as BSkeletonTable,
  Kr as BSkeletonWrapper,
  Ht as BSpinner,
  Ti as BTab,
  vi as BTable,
  vt as BTableSimple,
  wi as BTabs,
  mi as BTbody,
  pi as BTd,
  hi as BTfoot,
  $i as BTh,
  ki as BThead,
  ja as BToast,
  _t as BToastContainer,
  co as BToastPlugin,
  _t as BToaster,
  Si as BTr,
  st as BTransition,
  Ii as BootstrapVue3,
  dt as BvEvent,
  Ii as default,
  Wl as useBreadcrumb,
  Ga as useToast,
  Yl as vBPopover,
  Et as vBToggle,
  ln as vBTooltip,
  nn as vBVisible
};
